<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>cgi.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>cgi.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;cgi.lsp
<p>Basic CGI processing tools for GET and POST requests</p>
<b>Version:</b> v 2.2 - comments redone for automatic
documentation<br>
<b>Version:</b> v 2.3 - a fix in CGI:url-translate when translating
utf-8 strings<br>
<b>Version:</b> v 2.4 - check for empty string when aquiring
HTTP_COOKIE environment<br>
<b>Version:</b> v 2.5 - cleanup put-page for 10.0<br>
<b>Author:</b> Lutz Mueller, lutz@nuevatec.com<br>
<p>&nbsp;</p>
This module defines basic CGI processing tools for processing CGI
GET and POST requests and cookies.
<p>&nbsp;</p>
Include this file at the beginning of each file performing CGI
processing:
<pre>
 (load "/usr/share/newlisp/cgi.lsp")
 
</pre>
<p>&nbsp;</p>
<center>
<h2>Overview</h2>
</center>
On loading <tt>cgi.lsp</tt> will retrieve <tt>GET</tt>,
<tt>POST</tt> and cookie parameters via standard input and the
environment variables: <tt>QUERY_STRING</tt> and
<tt>HTTP_COOKIE</tt>. These environment variables are set by the
webserver (tested with Apache 1.3). The webserver is receiving
information back from <tt>cgi.lsp</tt> via std I/O channels.
<p>&nbsp;</p>
After having loaded this file all parameters from either
<tt>GET</tt> or <tt>POST</tt> method are stored as an association
list and in <tt>CGI:params</tt> and individual parameters can be
accessed using <tt>CGI:get</tt>.
<p>&nbsp;</p>
All cookies can be accessed in an association list
<tt>CGI:cookies</tt> and are accessed similar to the <tt>GET</tt>
and <tt>PUT</tt> parameters using <tt>CGI:get-cookie</tt>. A
function <tt>CGI:set-cookie</tt> is available for setting cookies.
<p>&nbsp;</p>
The function <tt>CGI:put-page</tt> outputs a HTML page to the
webserver after processing newLISP source embedded in
<tt>&lt;%</tt> and <tt>%&gt;</tt> tags.
<p>&nbsp;</p>
<tt>CGI:params</tt> and <tt>CGI:cookies</tt> contain the empty list
<tt>()</tt> when no parameters or cookies are present
<p>&nbsp;</p>
The function <tt>CGI:put-page</tt> can be used to output web pages
containing newLISP source embedded in &lt;%, %&gt; tags. Inside
these tags are newLISP statements printing output/HTML to the
webpage.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="CGI_put-page" id="CGI_put-page"></a>
<h3><font color="#CC0000">CGI:put-page</font></h3>
<b>syntax: (<font color="#CC0000">CGI:put-page</font>
<em>str-file-name</em>)</b><br>
<p><b>return:</b> The page output to standard out.</p>
<p>&nbsp;</p>
Processes an HTML page by evaluating newLISP source embedded into
the HTML text between <tt>&lt;%</tt> and <tt>%&gt;</tt> tags. The
newLISP source typically contains <tt>print</tt> and
<tt>println</tt> statements to output strings to standard out.
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 &lt;html&gt;
 &lt;body&gt;
 &lt;% (set 'site "example.com") %&gt;
 &lt;a href="http://&lt;% (print site) %&gt;"&gt;&lt;% (print site) %&gt;&lt;/a&gt;
 &lt;/body&gt;
 &lt;/html&gt;
 
 ; will output:
 
 &lt;pre&gt;
     &lt;html&gt;
     &lt;body&gt;
     &lt;a href="http://example.com"&gt;example.com&lt;/a&gt;
     &lt;/body&gt;
     &lt;/html&gt;
 &lt;/pre&gt;
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="CGI_url-translate" id="CGI_url-translate"></a>
<h3><font color="#CC0000">CGI:url-translate</font></h3>
<b>syntax: (<font color="#CC0000">CGI:url-translate</font>
<em>str-url-format</em>)</b><br>
<p><b>return:</b> An ASCII formatted string.</p>
<p>&nbsp;</p>
Translates all URL formatted characters to ASCII. Translates '+'
into spaces and <tt>%nn</tt> hexdigits into characters. <tt>nn</tt>
is a 2-nibble hex number.
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (CGI:url-translate "What+time+is+it%3f")  =&gt; "What time is it?"
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="CGI_set-cookie" id="CGI_set-cookie"></a>
<h3><font color="#CC0000">CGI:set-cookie</font></h3>
<b>syntax: (<font color="#CC0000">CGI:set-cookie</font>
<em>str-var</em> <em>str-value</em> <em>str-domain</em>
<em>str-path</em>)</b><br>
<b>parameter:</b> <em>str-var</em> - The cookie variable name as a
string.<br>
<b>parameter:</b> <em>str-value</em> - The cookie value as a
string.<br>
<b>parameter:</b> <em>str-domain</em> - The domain where to set the
cookie.<br>
<b>parameter:</b> <em>str-path</em> - The path for the domain.<br>
<p><b>return:</b> The string sent to standard out by
<tt>CGI:set-cookie</tt>.</p>
<p>&nbsp;</p>
This function should be called immedeately before closing the
header with <tt>(print "Content-type: text/html\r\n\r\n")</tt>,
which is typically the first statement in a CGI script written in
newLISP after the <tt>(load "cgi.lsp")</tt> statement.
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (load "cgi.lsp")

 (CGI:set-cookie "password" "secret" "asite.com" "/somedir")
 (print "Content-type: text/html\r\n\r\n")
 ...
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="CGI_get-cookie" id="CGI_get-cookie"></a>
<h3><font color="#CC0000">CGI:get-cookie</font></h3>
<b>syntax: (<font color="#CC0000">CGI:get-cookie</font>
<em>str-key</em>)</b><br>
<b>parameter:</b> <em>str-key</em> - The string for the cookie
variable name.<br>
<p><b>return:</b> The string for the cookie value.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (CGI:get-cookie "login")   =&gt;  "somebody" 
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="CGI_get" id="CGI_get"></a>
<h3><font color="#CC0000">CGI:get</font></h3>
<b>syntax: (<font color="#CC0000">CGI:get</font>
<em>str-key</em>)</b><br>
<b>parameter:</b> The - name of the <tt>GET</tt> or <tt>POST</tt>
variable as a string.<br>
<p><b>return:</b> The value string of the <tt>GET</tt> or
<tt>POST</tt> variable.</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (CGI:get "city") =&gt; "San Francisco"
</pre></blockquote>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>crypto.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>crypto.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;crypto.lsp
<p>SSL crypto functions for MD5 and SHA-1 hashing</p>
<b>Version:</b> 1.01 - initial release<br>
<b>Version:</b> 1.02 - renamed to crypto, new lib detection<br>
<b>Version:</b> 1.04 - added hmac encryption from amazon.com query
API<br>
<b>Author:</b> Lutz Mueller 2007, Martin Quiroga 2007<br>
<p>&nbsp;</p>
<h2>Module for SSL lib crypto bindings</h2>
This modules imports functions for the MD5 and SHA-1 hashing
algorithms described here: <a href=
"http://www.ietf.org/rfc/rfc3174.txt">http://www.ietf.org/rfc/rfc3174.txt</a>
. The crypto library is part of the <a href=
"http://www.openssl.org/">OpenSSL</a> libraries.
<p>&nbsp;</p>
To use this module include the following <tt>load</tt> statement at
the beginning of the program file:
<pre>
 (load "/usr/share/newlisp/modules/crypto.lsp")
 
</pre>
<p>&nbsp;</p>
<h2>Requirements:</h2>
On Mac OS X, UBUNTU and many other Linux, BSDs and other UNIX
installations <tt>libcrypto.so</tt> is installed by default as part
of the OpenSSL libraries in <tt>usr/lib/libcrypto.so</tt>. If
loading this module finishes with an error message the path of the
library should be corrected.
<p>&nbsp;</p>
This module has been tested on Mac OS X, UBUNTU Linux and FreeBSD.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="crypto_md5" id="crypto_md5"></a>
<h3><font color="#CC0000">crypto:md5</font></h3>
<b>syntax: (<font color="#CC0000">crypto:md5</font> <em>string</em>
<em>bool-raw</em>)</b><br>
<b>parameter:</b> <em>string</em> - The string buffer for which to
calculate a MD5 hash<br>
<b>parameter:</b> <em>bool-raw</em> - Return the raw binay buffer
when <tt>true</tt>.<br>
<p><b>return:</b> The 16 Byte MD5 hash as a 32 Byte long hex string
or as a 16 byte binary buffer.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (crypto:md5 "ABC") =&gt; "902fbdd2b1df0c4f70b4a5d23525e932"

 (crypto:md5 (read-file "newlisp-9.1.0.tgz")) =&gt; "46c79c93e904df35c6a8474ace406c92"
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="crypto_sha1" id="crypto_sha1"></a>
<h3><font color="#CC0000">crypto:sha1</font></h3>
<b>syntax: (<font color="#CC0000">crypto:sha1</font>
<em>string</em> <em>bool-raw</em>)</b><br>
<b>parameter:</b> <em>string</em> - The string buffer for which to
calculate a SHA-1 hash<br>
<b>parameter:</b> <em>bool-raw</em> - Return the raw binay buffer
when <tt>true</tt>.<br>
<p><b>return:</b> The 20 Byte SHA-1 hash as a 40 Byte long hex
string or as a 20 byte binary buffer.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (crypto:sha1 "ABC") =&gt; "3c01bdbb26f358bab27f267924aa2c9a03fcfdb8"

 (crypto:sha1 (read-file "newlisp-9.1.0.tgz")) =&gt; "2127a9c487f338b00f36cfd60b5f33d27b8d0010"
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="crypto_hmac" id="crypto_hmac"></a>
<h3><font color="#CC0000">crypto:hmac</font></h3>
<b>syntax: (<font color="#CC0000">crypto:hmac</font>
<em>func-hash</em> <em>str-message</em> <em>str-key</em>)</b><br>
<b>parameter:</b> <em>func-hash</em> - The hash function to
use.<br>
<b>parameter:</b> <em>str-message</em> - The message to
encrypt.<br>
<b>parameter:</b> <em>str-key</em> - The encryption key.<br>
<p>&nbsp;</p>
This function is part of the amazon.com <a href=
"http://docs.amazonwebservices.com/AWSEC2/2007-08-29/DeveloperGuide/using-query-api.html">
Query-API</a> and based on <a href=
"http://www.faqs.org/rfcs/rfc2104.html">RFC2104</a> - HMAC:
Keyed-Hashing for Message Authentication
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (set 'output (crypto:hmac crypto:md5 "Hello World" "secret"))
 (unpack (dup "c" (length output)) output)
 =&gt; (107 59 -76 66 117 -119 -35 -31 -7 -121 90 55 -109 -68 32 98)
</pre></blockquote>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>ftp.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>ftp.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;ftp.lsp
<p>FTP file transfer routines</p>
<b>Version:</b> 1.4 - comments redone for automatic
documentation<br>
<b>Version:</b> 1.5 - change in read-buffer for v.10.0<br>
<b>Author:</b> Eddie Rucker, Lutz Mueller, 2003<br>
<p>&nbsp;</p>
<h2>FTP file transfer routines</h2>
To use the module put a <tt>load</tt> statement at beginning of
your program file:
<pre>
 (load "/usr/share/newlisp/modules/ftp.lsp")
 
</pre>
<p>&nbsp;</p>
In case of failure the functions return <tt>nil</tt> and further
detail may be found in the variable <tt>FTP:result</tt>.
<p>&nbsp;</p>
To set debug mode, which shows all dialog with the server, set
<tt>FTP:debug-flag</tt>:
<pre>
 (set 'FTP:debug-flag true)
 
</pre>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="FTP_get" id="FTP_get"></a>
<h3><font color="#CC0000">FTP:get</font></h3>
<b>syntax: (<font color="#CC0000">FTP:get</font>
<em>str-user-id</em> <em>str-password</em> <em>str-host</em>
<em>str-dir</em> <em>str-file-name</em>)</b><br>
<b>parameter:</b> <em>str-user-id</em> - The user ID for logon.<br>
<b>parameter:</b> <em>str-password</em> - The password for the user
ID.<br>
<b>parameter:</b> <em>str-host</em> - The remote host name or IP as
a string.<br>
<b>parameter:</b> <em>str-dir</em> - The subdirectory on the
host.<br>
<b>parameter:</b> <em>str-file-name</em> - The name of the file to
transfer.<br>
<p><b>return:</b> <tt>true</tt> on success, <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (FTP:get "somebody" "secret" "host.com" "subdir" "aFile.tgz")   download
 (FTP:get "somebody" "secret" "192.168.1.120" "" "myfile.txt")   download
</pre></blockquote>
When leaving the string for the sub directory empty, the current
directory "." is assumed on the host.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="FTP_put" id="FTP_put"></a>
<h3><font color="#CC0000">FTP:put</font></h3>
<b>syntax: (<font color="#CC0000">FTP:put</font>
<em>str-user-id</em> <em>str-password</em> <em>str-host</em>
<em>str-dir</em> <em>str-file-name</em>)</b><br>
<b>parameter:</b> <em>str-user-id</em> - The user ID for logon.<br>
<b>parameter:</b> <em>str-password</em> - The password for the user
ID.<br>
<b>parameter:</b> <em>str-host</em> - The remote host name or IP as
a string.<br>
<b>parameter:</b> <em>str-dir</em> - The sub directory on the
host.<br>
<b>parameter:</b> <em>str-file-name</em> - The name of the file to
transfer.<br>
<p><b>return:</b> <tt>true</tt> on success, <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (FTP:put "somebody" "secret" "host.com" "subdir" "file")   upload
</pre></blockquote>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>gmp.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>gmp.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;gmp.lsp
<p>GNU MP Bignum Library interface</p>
<b>Version:</b> 1.52 updated for new install locations and GMP
website<br>
<b>Version:</b> 1.53 took out redefinition of normal int operations
to floats<br>
<b>Author:</b> Lutz Mueller, 2007<br>
<p>&nbsp;</p>
<h3>The GNU MP Bignum Library</h3>
This modules interfaces to libgmp which can be obtained from
<a href="http://gmplib.org/">http://gmplib.org/</a> .
<p>&nbsp;</p>
Source code for libgmp.so (UNIX) or lbgmp.dll (Win32) or
libgmp.dylib (Mac OS X) is available at this site.
<p>&nbsp;</p>
When compiling for Mac OS X on Intel CPUs use:
<p>&nbsp;</p>
<pre>
     ./configure CFLAGS="-m32" ABI=32
     make
     sudo make install
 
</pre>
<p>&nbsp;</p>
This interface module presets the maximum precision to 1024. The
precision can be changed to any other value by changing the
definition of <tt>MAX_PRECISION</tt> in the source of this module.
<p>&nbsp;</p>
All arguments to the GMP functions in this module must be given as
strings, an error will be thrown otherwise. When starting with a 0
the number is assumed to be in octal format when starting with 0x
in hexadecimal format.
<p>&nbsp;</p>
This file only imports a few functions from the many available in
GNU GMP. See the GMP manual for more functions.
<p>&nbsp;</p>
Note, that since version 8.9.7 newLISP does all integer arithmetik
with 64 bits giving up to 19 digits of precision. For precisions
less or equal 19 digits newLISP's built-in 64-bit integer
arithmetik is much faster.
<p>&nbsp;</p>
<h3>Usage</h3>
At the beginning of the programfile include a <tt>load</tt>
statement for the module:
<pre>
 (load "/usr/share/newlisp/modules/gmp.lsp")
 
</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (GMP:+ "123456789012345678901234567890" "123456789012345678901234567890") 
 =&gt; "246913578024691357802469135780"
</pre></blockquote>
<h3>Adding more functions to the library</h3>
When adding functions be aware that inside the GMP context
+,-,*,/,=,&lt;,&gt;,&lt;=,&gt;= are overwritten for multiple
precision and the original operators would have would have to be
prefixed with MAIN when used, inside the <tt>gmp.lsp</tt>
module.<br>
<br>
<center>
<h2>Integer arithmetik</h2>
</center>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="GMP_+"></a>
<h3><font color="#CC0000">GMP:+</font></h3>
<b>syntax: (<font color="#CC0000">GMP:+</font> <em>arg1</em>
<em>arg2</em>)</b><br>
add two integers in <em>arg1</em> and <em>arg2</em>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="GMP_-" id="GMP_-"></a>
<h3><font color="#CC0000">GMP:-</font></h3>
<b>syntax: (<font color="#CC0000">GMP:-</font> <em>arg1</em>
<em>arg2</em>)</b><br>
subtract <em>arg2</em> from <em>arg1</em>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="GMP_*"></a>
<h3><font color="#CC0000">GMP:*</font></h3>
<b>syntax: (<font color="#CC0000">GMP:*</font> <em>arg1</em>
<em>arg2</em>)</b><br>
multiply <em>arg1</em> by <em>arg2</em>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="GMP_/"></a>
<h3><font color="#CC0000">GMP:/</font></h3>
<b>syntax: (<font color="#CC0000">GMP:/</font> <em>arg1</em>
<em>arg2</em>)</b><br>
divide <em>arg1</em> by <em>arg2</em>, round towards '0' (zero)
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="GMP_%"></a>
<h3><font color="#CC0000">GMP:%</font></h3>
<b>syntax: (<font color="#CC0000">GMP:%</font> <em>arg1</em>
<em>arg2</em>)</b><br>
calc rest of division <em>arg1</em>/<em>arg2</em>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="GMP_**"></a>
<h3><font color="#CC0000">GMP:**</font></h3>
<b>syntax: (<font color="#CC0000">GMP:**</font> <em>arg1</em>
<em>arg2</em>)</b><br>
calc power(<em>arg1</em>, <em>arg2</em>)
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="GMP_="></a>
<h3><font color="#CC0000">GMP:=</font></h3>
<b>syntax: (<font color="#CC0000">GMP:=</font> <em>arg1</em>
<em>arg2</em>)</b><br>
test for <em>arg1</em> equal <em>arg2</em>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="GMP_&lt;"></a>
<h3><font color="#CC0000">GMP:&lt;&lt;/font&gt;</font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:&lt;&lt;/font&gt; <em>arg1</em>
<em>arg2</em>)</font><br>
test for <em>arg1</em> smaller <em>arg2</em></b></font>
<p><font color="#CC0000"><b>&nbsp;</b></font></p>
<center><font color="#CC0000"><b>- § -</b></font></center>
<p><font color="#CC0000"><b>&nbsp;</b></font></p>
<font color="#CC0000"><b><a name="GMP_&gt;"></a></b></font>
<h3><font color="#CC0000"><b><font color=
"#CC0000">GMP:&gt;</font></b></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:&gt;</font> <em>arg1</em> <em>arg2</em>)<br>
test for <em>arg1</em> bigger <em>arg2</em></b></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_&lt;="></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:&lt;=</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:&lt;=</font> <em>arg1</em> <em>arg2</em>)]</b><br>
test for <em>arg1</em> smaller or equal <em>arg2</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_&gt;="></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:&gt;=</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:&gt;=</font> <em>arg1</em> <em>arg2</em>)</b><br>
test for <em>arg1</em> bigger or equal <em>arg2</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center>
<h2><font color="#CC0000">Bit operations</font></h2>
</center>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_&amp;"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:&amp;</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:&amp;</font> <em>arg1</em> <em>arg2</em>)</b><br>
bitwise <em>and</em> of <em>arg1</em>, <em>arg2</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_|"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:|</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:|</font> <em>arg1</em> <em>arg2</em>)</b><br>
bitwise inclusive <em>or</em> of <em>arg1</em>,
<em>arg2</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_^"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:^</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:^</font> <em>arg1</em> <em>arg2</em>)</b><br>
bitwise exclusive <em>or</em> of <em>arg1</em>,
<em>arg2</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_~"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:~</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:~</font> <em>arg</em>)</b><br>
bitwise complement of <em>arg</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center>
<h2><font color="#CC0000">Number theory</font></h2>
</center>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_prime?"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:prime?</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:prime?</font> <em>arg</em>)</b><br>
check if <em>arg</em> is prime</font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_next-prime" id=
"GMP_next-prime"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:next-prime</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:next-prime</font> <em>arg</em>)</b><br>
calc closes prime greater than <em>arg</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_factor" id=
"GMP_factor"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:factor</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:factor</font> <em>arg</em>)</b><br>
calc a list of prime factors for <em>arg</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_gcd" id="GMP_gcd"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:gcd</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:gcd</font> <em>arg1</em> <em>arg2</em>)</b><br>
greatest common divisor of <em>arg1</em> and <em>arg2</em></font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_bin" id="GMP_bin"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:bin</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:bin</font> <em>arg1</em> <em>arg2</em>)</b><br>
calc binomial (<em>arg1</em> <em>arg2</em>)</font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_fac" id="GMP_fac"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:fac</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:fac</font> <em>arg</em>)</b><br>
arg! factorial(<em>arg</em>)</font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_fib" id="GMP_fib"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:fib</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:fib</font> <em>arg</em>)</b><br>
fibonacci(arg)</font>
<p><font color="#CC0000">&nbsp;</font></p>
<center>
<h2><font color="#CC0000">Random numbers</font></h2>
</center>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_seed" id="GMP_seed"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:seed</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:seed</font> <em>arg</em>)</b><br>
seed the random generator</font>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- § -</font></center>
<p><font color="#CC0000">&nbsp;</font></p>
<font color="#CC0000"><a name="GMP_rand" id="GMP_rand"></a></font>
<h3><font color="#CC0000"><font color=
"#CC0000">GMP:rand</font></font></h3>
<font color="#CC0000"><b>syntax: (<font color=
"#CC0000">GMP:rand</font> <em>arg</em>)</b><br>
generate random numbers between 0 and arg - 1</font>
<p><font color="#CC0000">&nbsp;</font></p>
<p><font color="#CC0000">&nbsp;</font></p>
<center><font color="#CC0000">- ∂ -</font></center>
<font color="#CC0000"><br></font>
<center><font color="#CC0000"><font face='Arial' size='-2' color=
'#444444'>generated with <a href=
"http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Index</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>Index</h1>
</center>
<a href="cgi.lsp.html"><br>
<br>
Module:&nbsp;cgi.lsp</a>
<p>Basic CGI processing tools for GET and POST requests</p>
<a href="cgi.lsp.html#CGI_put-page">put-page</a>&nbsp; &nbsp;
<a href="cgi.lsp.html#CGI_url-translate">url-translate</a>&nbsp;
&nbsp; <a href="cgi.lsp.html#CGI_set-cookie">set-cookie</a>&nbsp;
&nbsp; <a href="cgi.lsp.html#CGI_get-cookie">get-cookie</a>&nbsp;
&nbsp; <a href="cgi.lsp.html#CGI_get">get</a>&nbsp; &nbsp; <a href=
"crypto.lsp.html"><br>
<br>
Module:&nbsp;crypto.lsp</a>
<p>SSL crypto functions for MD5 and SHA-1 hashing</p>
<a href="crypto.lsp.html#crypto_md5">md5</a>&nbsp; &nbsp; <a href=
"crypto.lsp.html#crypto_sha1">sha1</a>&nbsp; &nbsp; <a href=
"crypto.lsp.html#crypto_hmac">hmac</a>&nbsp; &nbsp; <a href=
"ftp.lsp.html"><br>
<br>
Module:&nbsp;ftp.lsp</a>
<p>FTP file transfer routines</p>
<a href="ftp.lsp.html#FTP_get">get</a>&nbsp; &nbsp; <a href=
"ftp.lsp.html#FTP_put">put</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html"><br>
<br>
Module:&nbsp;gmp.lsp</a>
<p>GNU MP Bignum Library interface</p>
<a href="gmp.lsp.html#GMP_+">+</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_-">-</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_*">*</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_/">/</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_%">%</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_**">**</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_=">=</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_%3C">&lt;&lt;/a&gt;&nbsp; &nbsp;</a> <a href=
"gmp.lsp.html#GMP_%3E">&gt;</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_%3C=">&lt;=</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_%3E=">&gt;=</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_&amp;">&amp;</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_|">|</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_^">^</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_~">~</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_prime?">prime?</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_next-prime">next-prime</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_factor">factor</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_gcd">gcd</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_bin">bin</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_fac">fac</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_fib">fib</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_seed">seed</a>&nbsp; &nbsp; <a href=
"gmp.lsp.html#GMP_rand">rand</a>&nbsp; &nbsp; <a href=
"infix.lsp.html"><br>
<br>
Module:&nbsp;infix.lsp</a>
<p>Infix expression parser</p>
<a href="infix.lsp.html#INFIX_xlate">xlate</a>&nbsp; &nbsp;
<a href="mysql5.lsp.html"><br>
<br>
Module:&nbsp;mysql5.lsp</a>
<p>MySQL v.5 interface</p>
<a href="mysql5.lsp.html#MySQL_init">init</a>&nbsp; &nbsp; <a href=
"mysql5.lsp.html#MySQL_connect">connect</a>&nbsp; &nbsp; <a href=
"mysql5.lsp.html#MySQL_query">query</a>&nbsp; &nbsp; <a href=
"mysql5.lsp.html#MySQL_num-rows">num-rows</a>&nbsp; &nbsp; <a href=
"mysql5.lsp.html#MySQL_num-fields">num-fields</a>&nbsp; &nbsp;
<a href="mysql5.lsp.html#MySQL_fetch-row">fetch-row</a>&nbsp;
&nbsp; <a href=
"mysql5.lsp.html#MySQL_fetch-all">fetch-all</a>&nbsp; &nbsp;
<a href="mysql5.lsp.html#MySQL_databases">databases</a>&nbsp;
&nbsp; <a href="mysql5.lsp.html#MySQL_table">table</a>&nbsp; &nbsp;
<a href="mysql5.lsp.html#MySQL_fields">fields</a>&nbsp; &nbsp;
<a href="mysql5.lsp.html#MySQL_data-seek">data-seek</a>&nbsp;
&nbsp; <a href="mysql5.lsp.html#MySQL_error">error</a>&nbsp; &nbsp;
<a href=
"mysql5.lsp.html#MySQL_affected-rows">affected-rows</a>&nbsp;
&nbsp; <a href=
"mysql5.lsp.html#MySQL_inserted-id">inserted-id</a>&nbsp; &nbsp;
<a href="mysql5.lsp.html#MySQL_escape">escape</a>&nbsp; &nbsp;
<a href="mysql5.lsp.html#MySQL_close-db">close-db</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html"><br>
<br>
Module:&nbsp;mysql51.lsp</a>
<p>MySQL v.5.1 interface</p>
<a href="mysql51.lsp.html#MySQL_init">init</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_connect">connect</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_query">query</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_num-rows">num-rows</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_num-fields">num-fields</a>&nbsp;
&nbsp; <a href=
"mysql51.lsp.html#MySQL_fetch-row">fetch-row</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_fetch-all">fetch-all</a>&nbsp;
&nbsp; <a href=
"mysql51.lsp.html#MySQL_databases">databases</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_table">table</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_fields">fields</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_data-seek">data-seek</a>&nbsp;
&nbsp; <a href="mysql51.lsp.html#MySQL_error">error</a>&nbsp;
&nbsp; <a href=
"mysql51.lsp.html#MySQL_affected-rows">affected-rows</a>&nbsp;
&nbsp; <a href=
"mysql51.lsp.html#MySQL_inserted-id">inserted-id</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_escape">escape</a>&nbsp; &nbsp;
<a href="mysql51.lsp.html#MySQL_close-db">close-db</a>&nbsp; &nbsp;
<a href="odbc.lsp.html"><br>
<br>
Module:&nbsp;odbc.lsp</a>
<p>ODBC database interface</p>
<a href="odbc.lsp.html#ODBC_connect">connect</a>&nbsp; &nbsp;
<a href="odbc.lsp.html#ODBC_query">query</a>&nbsp; &nbsp; <a href=
"odbc.lsp.html#ODBC_num-cols">num-cols</a>&nbsp; &nbsp; <a href=
"odbc.lsp.html#ODBC_columns-atts">columns-atts</a>&nbsp; &nbsp;
<a href="odbc.lsp.html#ODBC_fetch-row">fetch-row</a>&nbsp; &nbsp;
<a href="odbc.lsp.html#ODBC_affected-rows">affected-rows</a>&nbsp;
&nbsp; <a href="odbc.lsp.html#ODBC_tables">tables</a>&nbsp; &nbsp;
<a href="odbc.lsp.html#ODBC_columns">columns</a>&nbsp; &nbsp;
<a href="odbc.lsp.html#ODBC_close-db">close-db</a>&nbsp; &nbsp;
<a href="pop3.lsp.html"><br>
<br>
Module:&nbsp;pop3.lsp</a>
<p>POP3 mail retrieval routines</p>
<a href="pop3.lsp.html#POP3_get-all-mail">get-all-mail</a>&nbsp;
&nbsp; <a href=
"pop3.lsp.html#POP3_get-new-mail">get-new-mail</a>&nbsp; &nbsp;
<a href=
"pop3.lsp.html#POP3_get-mail-status">get-mail-status</a>&nbsp;
&nbsp; <a href=
"pop3.lsp.html#POP3_delete-old-mail">delete-old-mail</a>&nbsp;
&nbsp; <a href=
"pop3.lsp.html#POP3_delete-all-mail">delete-all-mail</a>&nbsp;
&nbsp; <a href=
"pop3.lsp.html#POP3_get-error-text">get-error-text</a>&nbsp; &nbsp;
<a href="postscript.lsp.html"><br>
<br>
Module:&nbsp;postscript.lsp</a>
<p>Routines for creating postscript files</p>
<a href="postscript.lsp.html#ps_goto">goto</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_move">move</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_turn">turn</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_angle">angle</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_draw">draw</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_drawto">drawto</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_line">line</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_bezier">bezier</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_polygon">polygon</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_circle">circle</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_ellipse">ellipse</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_pie">pie</a>&nbsp; &nbsp; <a href=
"postscript.lsp.html#ps_petal">petal</a>&nbsp; &nbsp; <a href=
"postscript.lsp.html#ps_shape">shape</a>&nbsp; &nbsp; <a href=
"postscript.lsp.html#ps_clip">clip</a>&nbsp; &nbsp; <a href=
"postscript.lsp.html#ps_text">text</a>&nbsp; &nbsp; <a href=
"postscript.lsp.html#ps_textoutline">textoutline</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_textarc">textarc</a>&nbsp; &nbsp;
<a href=
"postscript.lsp.html#ps_textarcoutline">textarcoutline</a>&nbsp;
&nbsp; <a href="postscript.lsp.html#ps_textclip">textclip</a>&nbsp;
&nbsp; <a href="postscript.lsp.html#ps_font">font</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_translate">translate</a>&nbsp;
&nbsp; <a href="postscript.lsp.html#ps_scale">scale</a>&nbsp;
&nbsp; <a href="postscript.lsp.html#ps_rotate">rotate</a>&nbsp;
&nbsp; <a href="postscript.lsp.html#ps_gsave">gsave</a>&nbsp;
&nbsp; <a href="postscript.lsp.html#ps_grestore">grestore</a>&nbsp;
&nbsp; <a href=
"postscript.lsp.html#ps_line-width">line-width</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_line-cap">line-cap</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_line-join">line-join</a>&nbsp;
&nbsp; <a href=
"postscript.lsp.html#ps_line-color">line-color</a>&nbsp; &nbsp;
<a href="postscript.lsp.html#ps_fill-color">fill-color</a>&nbsp;
&nbsp; <a href="postscript.lsp.html#ps_render">render</a>&nbsp;
&nbsp; <a href="postscript.lsp.html#ps_save">save</a>&nbsp; &nbsp;
<a href="smtp.lsp.html"><br>
<br>
Module:&nbsp;smtp.lsp</a>
<p>Send mail using SMTP protocol</p>
<a href="smtp.lsp.html#SMTP_send-mail">send-mail</a>&nbsp; &nbsp;
<a href="sqlite3.lsp.html"><br>
<br>
Module:&nbsp;sqlite3.lsp</a>
<p>SQLite3 database interface routines</p>
<a href="sqlite3.lsp.html#sql3_open">open</a>&nbsp; &nbsp; <a href=
"sqlite3.lsp.html#sql3_close">close</a>&nbsp; &nbsp; <a href=
"sqlite3.lsp.html#sql3_sql">sql</a>&nbsp; &nbsp; <a href=
"sqlite3.lsp.html#sql3_rowid">rowid</a>&nbsp; &nbsp; <a href=
"sqlite3.lsp.html#sql3_tables">tables</a>&nbsp; &nbsp; <a href=
"sqlite3.lsp.html#sql3_columns">columns</a>&nbsp; &nbsp; <a href=
"sqlite3.lsp.html#sql3_changes">changes</a>&nbsp; &nbsp; <a href=
"sqlite3.lsp.html#sql3_timeout">timeout</a>&nbsp; &nbsp; <a href=
"sqlite3.lsp.html#sql3_error">error</a>&nbsp; &nbsp; <a href=
"stat.lsp.html"><br>
<br>
Module:&nbsp;stat.lsp</a>
<p>Basic statistics and plotting library</p>
<a href="stat.lsp.html#stat_plot">plot</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_plotXY">plotXY</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_sum">sum</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_mean">mean</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_var">var</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_sdev">sdev</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_sum-sq">sum-sq</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_sum-xy">sum-xy</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_cov">cov</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_sum-d2">sum-d2</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_corr">corr</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_regression">regression</a>&nbsp; &nbsp;
<a href="stat.lsp.html#stat_fit">fit</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_sum-d2xy">sum-d2xy</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_moments">moments</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_f-prob">f-prob</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_multiple-reg">multiple-reg</a>&nbsp; &nbsp;
<a href="stat.lsp.html#stat_cov-matrix">cov-matrix</a>&nbsp; &nbsp;
<a href="stat.lsp.html#stat_corr-matrix">corr-matrix</a>&nbsp;
&nbsp; <a href="stat.lsp.html#stat_smooth">smooth</a>&nbsp; &nbsp;
<a href="stat.lsp.html#stat_lag">lag</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_cumulate">cumulate</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_power">power</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_matrix">matrix</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_diagonal">diagonal</a>&nbsp; &nbsp; <a href=
"stat.lsp.html#stat_get-diagonal">get-diagonal</a>&nbsp; &nbsp;
<a href="stat.lsp.html#stat_mat-map">mat-map</a>&nbsp; &nbsp;
<a href="unix.lsp.html"><br>
<br>
Module:&nbsp;unix.lsp</a>
<p>Itreface to various UNIX libc functions</p>
<a href="unix.lsp.html#unix_getpid">getpid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_getppid">getppid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_getuid">getuid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_geteuid">geteuid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_getgid">getgid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_getegid">getegid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_setuid">setuid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_seteuid">seteuid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_setgid">setgid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_setegid">setegid</a>&nbsp; &nbsp;
<a href="unix.lsp.html#unix_kill">kill</a>&nbsp; &nbsp; <a href=
"unix.lsp.html#unix_chmod">chmod</a>&nbsp; &nbsp; <a href=
"unix.lsp.html#unix_ioctl">ioctl</a>&nbsp; &nbsp; <a href=
"unix.lsp.html#unix_mkfifo">mkfifo</a>&nbsp; &nbsp; <a href=
"unix.lsp.html#unix_mktemp">mktemp</a>&nbsp; &nbsp; <a href=
"unix.lsp.html#unix_syslog">syslog</a>&nbsp; &nbsp; <a href=
"xmlrpc-client.lsp.html"><br>
<br>
Module:&nbsp;xmlrpc-client.lsp</a>
<p>XMLRPC protocol client routines</p>
<a href=
"xmlrpc-client.lsp.html#XMLRPC_system.listMethods">system.listMethods</a>&nbsp;
&nbsp; <a href=
"xmlrpc-client.lsp.html#XMLRPC_system.methodHelp">system.methodHelp</a>&nbsp;
&nbsp; <a href=
"xmlrpc-client.lsp.html#XMLRPC_system.methodSignatures">system.methodSignatures</a>&nbsp;
&nbsp; <a href=
"xmlrpc-client.lsp.html#XMLRPC_execute">execute</a>&nbsp; &nbsp;
<a href=
"xmlrpc-client.lsp.html#XMLRPC_newLISP.evalString">newLISP.evalString</a>&nbsp;
&nbsp; <a href=
"xmlrpc-client.lsp.html#XMLRPC_error">error</a>&nbsp; &nbsp;
<a href="zlib.lsp.html"><br>
<br>
Module:&nbsp;zlisp.lsp</a>
<p>Functions for compression/decompression with zlib</p>
<a href="zlib.lsp.html#zlib_squeeze">squeeze</a>&nbsp; &nbsp;
<a href="zlib.lsp.html#zlib_unsqueeze">unsqueeze</a>&nbsp; &nbsp;
<a href="zlib.lsp.html#zlib_gz-read-file">gz-read-file</a>&nbsp;
&nbsp; <a href=
"zlib.lsp.html#zlib_gz-write-file">gz-write-file</a>&nbsp; &nbsp;
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>infix.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>infix.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;infix.lsp
<p>Infix expression parser</p>
<b>Version:</b> 2.1 - comments redone for automatic
documentation<br>
<b>Version:</b> 2.2 - fixed bug for trailing lower priority ops<br>
<b>Author:</b> Lutz Mueller<br>
<p>&nbsp;</p>
<h2>Infix expression parser</h2>
Parses infix, prefix or postfix expressions given in strings and
returns a newLISP expressions, which can be evaluated; captures
syntax errors.
<p>&nbsp;</p>
At the beginning od the program using this module include the
following statement:
<pre>
 (load "/usr/share/newlisp/modules/infix.lsp")
 
</pre>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="INFIX_xlate" id="INFIX_xlate"></a>
<h3><font color="#CC0000">INFIX:xlate</font></h3>
<b>syntax: (<font color="#CC0000">INFIX:xlate</font>
<em>str-expression</em> [<em>context-target</em>])</b><br>
<b>parameter:</b> <em>str-expression</em> - The infix expression in
a string<br>
<b>parameter:</b> <em>context-target</em> - An optional context as
compile taret.<br>
<p><b>return:</b> A newLISP expression or <tt>nil</tt> on
failure.</p>
When <tt>nil</tt> is returned then the error message is in
<tt>result</tt>. As an optional second parameter a target context
can be passed, if not used, MAIN is assumed.
<p>&nbsp;</p>
Note that the parser requires operators, variables and constants
surrounded by spaces except where parenthesis are used.
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (INFIX:xlate "3 + 4") =&gt; (add 3 4)  parses infix
 (INFIX:xlate "+ 3 4") =&gt; (add 3 4)  parses prefix s-expressions
 (INFIX:xlate "3 4 +") =&gt; (add 2 4)  parses postfix

 (INFIX:xlate "3 + * 4") =&gt; "ERR: missing argument for +"

 (eval (INFIX:xlate "3 + 4")) =&gt; 7

 (INFIX:xlate "(3 + 4) * (5 - 2)")  =&gt; (mul (add 3 4) (sub 5 2))

 (INFIX:xlate "(a + b) ^ 2 + (a - b) ^ 2") =&gt; (add (pow (add a b) 2) (pow (sub a b) 2))

 (INFIX:xlate "x = (3 + sin(20)) * (5 - 2)")  =&gt; (setq x (mul (add 3 (sin 20)) (sub 5 2)))

 (INFIX:xlate "x = (3 + sin(10 - 2)) * (5 - 2)")  
         =&gt; (setq x (mul (add 3 (sin (sub 10 2))) (sub 5 2)))
</pre></blockquote>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>mysql5.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>mysql5.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;mysql5.lsp
<p>MySQL v.5 interface</p>
<b>Version:</b> 2.61 - addition for mysql_escape_string (Jeff
Ober)<br>
<b>Version:</b> 2.62 - fix for mysql_escape_string (Tim
Johnson)<br>
<b>Author:</b> Lutz Mueller 2003-2006, Gordon Fischer 2005, Jeff
Ober 2007<br>
<p>&nbsp;</p>
This MySQL 5 interface module has been tested on version 5.0.19 of
mysql from <a href="http://www.mysql.com">www.mysql.com</a>
<p>&nbsp;</p>
This implementation supports a maximum of 2,147,483,647 rows in a
database table. Now automatically adjusts row indexes to endian
type of host CPU, but higher 32 bits are treated as 0 for now.
<p>&nbsp;</p>
<h3>Requirements</h3>
At the beginning of the program file include a <tt>load</tt>
statment for the module:
<pre>
 (load "/usr/share/newlisp/mysql5.lsp")
 
</pre>
<p>&nbsp;</p>
A version of <tt>libmysqlclient</tt> for a specific platform is
required:
<p>&nbsp;</p>
on LINUX/UNIX: <tt>/usr/local/mysql/libmysqlclient.15.so</tt><br>
on Mac OS X: <tt>/usr/local/mysql/libmysqlclient.15.dylib</tt>
<p>&nbsp;</p>
To compile MySQL with client libraries use:
<p>&nbsp;</p>
<tt>./configure --prefix=/usr/local --enable-shared</tt>
<p>&nbsp;</p>
This library might be in a different location on a particular
installation of MySQL or have a different name. Change accordingly
in the code at the beginning.
<p>&nbsp;</p>
The MySQL server itself may reside on a different machine on the
network. The library <tt>libmysqlclient</tt> will communicate with
that server. The correct connection is created using the
<tt>MySQL:connect</tt> call.
<p>&nbsp;</p>
At the bottom of the module file <tt>mysql5,lsp</tt> a test routine
<tt>test-mysql</tt> is included to test for correct installation of
MySQL.
<p>&nbsp;</p>
In the <tt>MySQL:connect</tt> call of that test routine the correct
parameters for the MySQL server location and user and password have
to be inserted.
<p>&nbsp;</p>
<h3>Adapting mysql.lsp to other versions of MySQL</h3>
Some of the functions like <tt>mysql_num_rows()</tt> cannot be
imported because they are really macros extracting data from
structures like <tt>MYSQL</tt> or <tt>MYSQL_RES</tt>. See the file
<tt>mysql.h</tt> in your MySQL distribution.
<p>&nbsp;</p>
The file <tt>sql.c</tt> in the newLISP distribution contains a
program calculating the offsets of the most important fields in
these structures. These offsets are used here to retrieve values
for the number of rows in a result set, etc. Using these offsets
and the information found in <tt>mysql.h</tt> and
<tt>mysql_com.h</tt>, other functions can be imported and wrappers
built around them. In this case one needs to install the
developer's version of MySQL to get the header files mentioned.
<p>&nbsp;</p>
<h3>Functions available</h3>
<pre>
     MySQL:init ................ get a database handle MYSQL
     MySQL:connect ............. connect to a database
     MySQL:query ............... execute a SQL statement
     MySQL:num-rows ............ rows in result of query
     MySQL:num-fields .......... columns in result of query
     MySQL:fetch-row ........... get row from the query result
     MySQL:fetch-all ........... get all rows from the last query
     MySQL:database ............ return all database names
     MySQL:tables .............. return all tables names
     MySQL:fields .............. return all fields in a table
     MySQL:data-seek ........... position in result for fetching
     MySQL:affected-rows ....... number of affected rows from operation
     MySQL:inserted-id ......... last value of auto increment id operation
     MySQL:escape .............. escapes SQL input string using mysql_real_escape_string
     MySQL:error ............... get error message
     MySQL:close-db ............ close database connection
 
</pre>
<p>&nbsp;</p>
<h3>A typical MySQL session</h3>
The following code piece outlines a typical MySQL session:
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (load "mysql5.lsp) ; load the module file

 (MySQL:init)       ; initialize
 (MySQL:connect "192.168.1.10" "auser" "secret" "mydb") ; logon
 (MySQL:query "select ...;") ; SQL query
 (MySQL:query "insert ...;") ; SQL query
        ...
 (MySQL:close-db)
</pre></blockquote>
The database server is listening on IP 192.168.1.10. The program
connects with username <tt>"auser"</tt> password <tt>"secret"</tt>
to a database with the name <tt>"mydb"</tt>. After connecting SQL
statements are performed and finally the program disconnects from
the server.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_init" id="MySQL_init"></a>
<h3><font color="#CC0000">MySQL:init</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:init</font>)</b><br>
<p><b>return:</b> <tt>true</tt> on success, <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_connect" id="MySQL_connect"></a>
<h3><font color="#CC0000">MySQL:connect</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:connect</font>
<em>str-server</em> <em>str-userID</em> <em>str-password</em>
<em>str-db</em>)</b><br>
<b>parameter:</b> <em>str-server</em> - The host name or IP address
or <tt>0</tt> for localhost.<br>
<b>parameter:</b> <em>str-userID</em> - The user ID for
authentication.<br>
<b>parameter:</b> <em>str-password</em> - The password for
authentication.<br>
<b>parameter:</b> <em>str-db</em> - The name of the database to
connect to.<br>
<p><b>return:</b> <tt>true</tt> for success or <tt>nil</tt> for
failure.</p>
<p>&nbsp;</p>
Connects to a database on server and authenticates a user ID.
<tt>(MySQL:init)</tt> must have been called previously.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_query" id="MySQL_query"></a>
<h3><font color="#CC0000">MySQL:query</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:query</font>
<em>str-sql</em>)</b><br>
<b>parameter:</b> <em>str-sql</em> - A valid SQL query string.<br>
<p><b>return:</b> For <tt>insert</tt> queries rerturns the inserted
ID else <tt>true</tt></p>
for success or <tt>nil</tt> for failure.
<p>&nbsp;</p>
Sends a SQL query string to the database server for evaluation.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_num-rows" id="MySQL_num-rows"></a>
<h3><font color="#CC0000">MySQL:num-rows</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:num-rows</font>)</b><br>
<p><b>return:</b> Number of rows from last query.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_num-fields" id="MySQL_num-fields"></a>
<h3><font color="#CC0000">MySQL:num-fields</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:num-fields</font>)</b><br>
<p><b>return:</b> Number of columns from last query.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_fetch-row" id="MySQL_fetch-row"></a>
<h3><font color="#CC0000">MySQL:fetch-row</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:fetch-row</font>)</b><br>
<p><b>return:</b> A list of field elements.</p>
<p>&nbsp;</p>
Fetches a row from a previous SQL <tt>MySQL:query</tt>
<tt>select</tt> statement. Subsequent calls fetch row by row from
the result table until the end of the table is reached.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_fetch-all" id="MySQL_fetch-all"></a>
<h3><font color="#CC0000">MySQL:fetch-all</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:fetch-all</font>)</b><br>
<p><b>return:</b> All rows/fields from the last query.</p>
<p>&nbsp;</p>
The whole result set from the query is returned at once as a list
of row lists.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_databases" id="MySQL_databases"></a>
<h3><font color="#CC0000">MySQL:databases</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:databases</font>)</b><br>
<p><b>return:</b> A list of databases.</p>
<p>&nbsp;</p>
Performs a <tt>show databases;</tt> query.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_table" id="MySQL_table"></a>
<h3><font color="#CC0000">MySQL:table</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:table</font>)</b><br>
<p><b>return:</b> A list of tables in the database.</p>
<p>&nbsp;</p>
Performs a <tt>show tables;</tt> query.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_fields" id="MySQL_fields"></a>
<h3><font color="#CC0000">MySQL:fields</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:fields</font>
<em>str-table</em>)</b><br>
<b>parameter:</b> <em>str-table</em> - The name of the table.<br>
<p><b>return:</b> A list of field description lists.</p>
<p>&nbsp;</p>
For each field name in the table a list of specifications for that
field is returned. The list starts with the name for the field
followed by the type size/precision and other optional field
descriptions.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_data-seek" id="MySQL_data-seek"></a>
<h3><font color="#CC0000">MySQL:data-seek</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:data-seek</font>
<em>num-offset</em>)</b><br>
<b>parameter:</b> <em>num-offset</em> - The <tt>0</tt> based offset
to position inside the data set.<br>
<p><b>return:</b> Always <tt>true</tt>.</p>
<p>&nbsp;</p>
Positions in the result set at a zero based offset for a subsequent
<tt>MySQL:fetch-row</tt> call. If the offset is out of the allowed
range for the result set a subsequent fetch-row will return
<tt>nil</tt>.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_error" id="MySQL_error"></a>
<h3><font color="#CC0000">MySQL:error</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:error</font>)</b><br>
<p><b>return:</b> Text info about the last error which occured.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_affected-rows" id="MySQL_affected-rows"></a>
<h3><font color="#CC0000">MySQL:affected-rows</font></h3>
<b>syntax: (<font color=
"#CC0000">MySQL:affected-rows</font>)</b><br>
<p><b>return:</b> Number of affected rows by the last
<tt>MySQL:query</tt> operation.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_inserted-id" id="MySQL_inserted-id"></a>
<h3><font color="#CC0000">MySQL:inserted-id</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:inserted-id</font>)</b><br>
<p><b>return:</b> Last insert ID from an auto increment field.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_escape" id="MySQL_escape"></a>
<h3><font color="#CC0000">MySQL:escape</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:escape</font>
<em>str-sql</em>)</b><br>
<p><b>return:</b> escaped string</p>
<p>&nbsp;</p>
This function will escape special characters in <em>str-sql</em>,
so that it is safe to place it in a MySQL query.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_close-db" id="MySQL_close-db"></a>
<h3><font color="#CC0000">MySQL:close-db</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:close-db</font>)</b><br>
<p><b>return:</b> Always <tt>true</tt>.</p>
<p>&nbsp;</p>
Closes database access. For new database acess, both
<tt>MySQL:init</tt> and <tt>MySQL:connect</tt> functions have to be
called.
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>mysql51.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>mysql51.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;mysql51.lsp
<p>MySQL v.5.1 interface</p>
<b>Version:</b> 2.61 - addition for mysql_escape_string (Jeff
Ober)<br>
<b>Version:</b> 2.62 - fix for mysql_escape_string (Tim
Johnson)<br>
<b>Author:</b> Lutz Mueller 2003-2006, Gordon Fischer 2005, Jeff
Ober 2007<br>
<p>&nbsp;</p>
This MySQL 5.1 interface module has been tested on version 5.1.21
of mysql from <a href="http://www.mysql.com">www.mysql.com</a>
<p>&nbsp;</p>
This implementation supports a maximum of 2,147,483,647 rows in a
database table. Now automatically adjusts row indexes to endian
type of host CPU, but higher 32 bits are treated as 0 for now.
<p>&nbsp;</p>
<h3>Requirements</h3>
At the beginning of the program file include a <tt>load</tt>
statment for the module:
<pre>
 (load "/usr/share/newlisp/mysql5.lsp")
 
</pre>
<p>&nbsp;</p>
A version of <tt>libmysqlclient</tt> for a specific platform is
required:
<p>&nbsp;</p>
on LINUX/UNIX: <tt>/usr/local/mysql/libmysqlclient.so</tt><br>
on Mac OS X: <tt>/usr/local/mysql/libmysqlclient.dylib</tt>
<p>&nbsp;</p>
To compile MySQL with client libraries use:
<p>&nbsp;</p>
<tt>./configure --prefix=/usr/local --enable-shared</tt>
<p>&nbsp;</p>
This library might be in a different location on a particular
installation of MySQL or have a different name. Change accordingly
in the code at the beginning.
<p>&nbsp;</p>
The MySQL server itself may reside on a different machine on the
network. The library <tt>libmysqlclient</tt> will communicate with
that server. The correct connection is created using the
<tt>MySQL:connect</tt> call.
<p>&nbsp;</p>
At the bottom of the module file <tt>mysql51r.lsp</tt> a test
routine <tt>test-mysql</tt> is included to test for correct
installation of MySQL.
<p>&nbsp;</p>
In the <tt>MySQL:connect</tt> call of that test routine the correct
parameters for the MySQL server location and user and password have
to be inserted.
<p>&nbsp;</p>
<h3>Adapting mysql.lsp to other versions of MySQL</h3>
Some of the functions like <tt>mysql_num_rows()</tt> cannot be
imported because they are really macros extracting data from
structures like <tt>MYSQL</tt> or <tt>MYSQL_RES</tt>. See the file
<tt>mysql.h</tt> in your MySQL distribution.
<p>&nbsp;</p>
The file <tt>sql.c</tt> in the newLISP distribution contains a
program calculating the offsets of the most important fields in
these structures. These offsets are used here to retrieve values
for the number of rows in a result set, etc. Using these offsets
and the information found in <tt>mysql.h</tt> and
<tt>mysql_com.h</tt>, other functions can be imported and wrappers
built around them. In this case one needs to install the
developer's version of MySQL to get the header files mentioned.
<p>&nbsp;</p>
<h3>Functions available</h3>
<pre>
     MySQL:init ................ get a database handle MYSQL
     MySQL:connect ............. connect to a database
     MySQL:query ............... execute a SQL statement
     MySQL:num-rows ............ rows in result of query
     MySQL:num-fields .......... columns in result of query
     MySQL:fetch-row ........... get row from the query result
     MySQL:fetch-all ........... get all rows from the last query
     MySQL:database ............ return all database names
     MySQL:tables .............. return all tables names
     MySQL:fields .............. return all fields in a table
     MySQL:data-seek ........... position in result for fetching
     MySQL:affected-rows ....... number of affected rows from operation
     MySQL:inserted-id ......... last value of auto increment id operation
     MySQL:escape .............. escapes SQL input string using mysql_real_escape_string
     MySQL:error ............... get error message
     MySQL:close-db ............ close database connection
 
</pre>
<p>&nbsp;</p>
<h3>A typical MySQL session</h3>
The following code piece outlines a typical MySQL session:
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (load "mysql51.lsp) ; load the module file

 (MySQL:init)       ; initialize
 (MySQL:connect "192.168.1.10" "auser" "secret" "mydb") ; logon
 (MySQL:query "select ...;") ; SQL query
 (MySQL:query "insert ...;") ; SQL query
        ...
 (MySQL:close-db)
</pre></blockquote>
The database server is listening on IP 192.168.1.10. The program
connects with username <tt>"auser"</tt> password <tt>"secret"</tt>
to a database with the name <tt>"mydb"</tt>. After connecting SQL
statements are performed and finally the program disconnects from
the server.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_init" id="MySQL_init"></a>
<h3><font color="#CC0000">MySQL:init</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:init</font>)</b><br>
<p><b>return:</b> <tt>true</tt> on success, <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_connect" id="MySQL_connect"></a>
<h3><font color="#CC0000">MySQL:connect</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:connect</font>
<em>str-server</em> <em>str-userID</em> <em>str-password</em>
<em>str-db</em>)</b><br>
<b>parameter:</b> <em>str-server</em> - The host name or IP address
or <tt>0</tt> for localhost.<br>
<b>parameter:</b> <em>str-userID</em> - The user ID for
authentication.<br>
<b>parameter:</b> <em>str-password</em> - The password for
authentication.<br>
<b>parameter:</b> <em>str-db</em> - The name of the database to
connect to.<br>
<p><b>return:</b> <tt>true</tt> for success or <tt>nil</tt> for
failure.</p>
<p>&nbsp;</p>
Connects to a database on server and authenticates a user ID.
<tt>(MySQL:init)</tt> must have been called previously.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_query" id="MySQL_query"></a>
<h3><font color="#CC0000">MySQL:query</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:query</font>
<em>str-sql</em>)</b><br>
<b>parameter:</b> <em>str-sql</em> - A valid SQL query string.<br>
<p><b>return:</b> For <tt>insert</tt> queries rerturns the inserted
ID else <tt>true</tt></p>
for success or <tt>nil</tt> for failure.
<p>&nbsp;</p>
Sends a SQL query string to the database server for evaluation.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_num-rows" id="MySQL_num-rows"></a>
<h3><font color="#CC0000">MySQL:num-rows</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:num-rows</font>)</b><br>
<p><b>return:</b> Number of rows from last query.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_num-fields" id="MySQL_num-fields"></a>
<h3><font color="#CC0000">MySQL:num-fields</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:num-fields</font>)</b><br>
<p><b>return:</b> Number of columns from last query.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_fetch-row" id="MySQL_fetch-row"></a>
<h3><font color="#CC0000">MySQL:fetch-row</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:fetch-row</font>)</b><br>
<p><b>return:</b> A list of field elements.</p>
<p>&nbsp;</p>
Fetches a row from a previous SQL <tt>MySQL:query</tt>
<tt>select</tt> statement. Subsequent calls fetch row by row from
the result table until the end of the table is reached.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_fetch-all" id="MySQL_fetch-all"></a>
<h3><font color="#CC0000">MySQL:fetch-all</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:fetch-all</font>)</b><br>
<p><b>return:</b> All rows/fields from the last query.</p>
<p>&nbsp;</p>
The whole result set from the query is returned at once as a list
of row lists.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_databases" id="MySQL_databases"></a>
<h3><font color="#CC0000">MySQL:databases</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:databases</font>)</b><br>
<p><b>return:</b> A list of databases.</p>
<p>&nbsp;</p>
Performs a <tt>show databases;</tt> query.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_table" id="MySQL_table"></a>
<h3><font color="#CC0000">MySQL:table</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:table</font>)</b><br>
<p><b>return:</b> A list of tables in the database.</p>
<p>&nbsp;</p>
Performs a <tt>show tables;</tt> query.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_fields" id="MySQL_fields"></a>
<h3><font color="#CC0000">MySQL:fields</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:fields</font>
<em>str-table</em>)</b><br>
<b>parameter:</b> <em>str-table</em> - The name of the table.<br>
<p><b>return:</b> A list of field description lists.</p>
<p>&nbsp;</p>
For each field name in the table a list of specifications for that
field is returned. The list starts with the name for the field
followed by the type size/precision and other optional field
descriptions.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_data-seek" id="MySQL_data-seek"></a>
<h3><font color="#CC0000">MySQL:data-seek</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:data-seek</font>
<em>num-offset</em>)</b><br>
<b>parameter:</b> <em>num-offset</em> - The <tt>0</tt> based offset
to position inside the data set.<br>
<p><b>return:</b> Always <tt>true</tt>.</p>
<p>&nbsp;</p>
Positions in the result set at a zero based offset for a subsequent
<tt>MySQL:fetch-row</tt> call. If the offset is out of the allowed
range for the result set a subsequent fetch-row will return
<tt>nil</tt>.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_error" id="MySQL_error"></a>
<h3><font color="#CC0000">MySQL:error</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:error</font>)</b><br>
<p><b>return:</b> Text info about the last error which occured.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_affected-rows" id="MySQL_affected-rows"></a>
<h3><font color="#CC0000">MySQL:affected-rows</font></h3>
<b>syntax: (<font color=
"#CC0000">MySQL:affected-rows</font>)</b><br>
<p><b>return:</b> Number of affected rows by the last
<tt>MySQL:query</tt> operation.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_inserted-id" id="MySQL_inserted-id"></a>
<h3><font color="#CC0000">MySQL:inserted-id</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:inserted-id</font>)</b><br>
<p><b>return:</b> Last insert ID from an auto increment field.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_escape" id="MySQL_escape"></a>
<h3><font color="#CC0000">MySQL:escape</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:escape</font>
<em>str-sql</em>)</b><br>
<p><b>return:</b> escaped string</p>
<p>&nbsp;</p>
This function will escape special characters in <em>str-sql</em>,
so that it is safe to place it in a MySQL query.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="MySQL_close-db" id="MySQL_close-db"></a>
<h3><font color="#CC0000">MySQL:close-db</font></h3>
<b>syntax: (<font color="#CC0000">MySQL:close-db</font>)</b><br>
<p><b>return:</b> Always <tt>true</tt>.</p>
<p>&nbsp;</p>
Closes database access. For new database acess, both
<tt>MySQL:init</tt> and <tt>MySQL:connect</tt> functions have to be
called.
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>odbc.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>odbc.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;odbc.lsp
<p>ODBC database interface</p>
<b>Version:</b> 1.7 - comments redone for automatic
documentation<br>
<b>Author:</b> Lutz Mueller, 2003<br>
<p>&nbsp;</p>
<h2>OCBC Interface functions</h2>
<p>&nbsp;</p>
This module has only been tested on Win32 but should work on UNIX
too with few modifications. At the beginning of the program file
include a <tt>load</tt> statement for the module:
<pre>
 (load "odbc.lsp")
 
</pre>
<p>&nbsp;</p>
Some of the code assumes Intel (low -&gt; high) little-endian byte
order.
<p>&nbsp;</p>
See the end of file for a test function <tt>test-odbc</tt>, which
demonstrates the usage of the module and can be used to test a
correct ODBC installation and data source setup.
<p>&nbsp;</p>
<h2>Requirements</h2>
On Win32 platforms required <tt>odbc32.dll</tt> is part of the OS's
installations. There is no UNIX function import tested or adapted
for this ODBC module.
<p>&nbsp;</p>
<h2>Function overview</h2>
<pre>
  (ODBC:connect data-source-name-str user-name-str password-str) ; connect to a data source
  (ODBC:query sql-str)          ; perform a SQL statement
  (ODBC:num-cols)               ; number of columns in a query result set from <tt>select</tt>
  (ODBC:column-atts col)        ; retrieve columns attributes
  (ODBC:fetch-row)              ; fetch a row of data after a sql query with <tt>select</tt>
  (ODBC:affected-rows)          ; number of rows affected by a sql query: <tt>delete</tt>, <tt>update</tt> etc.
  (ODBC:tables)                 ; return a list of tables in the current database
  (ODBC:columns table-name)     ; return an array of column attributes in table-name
  (ODBC:close-db)               ; close database connection
 
</pre>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_connect" id="ODBC_connect"></a>
<h3><font color="#CC0000">ODBC:connect</font></h3>
<b>syntax: (<font color="#CC0000">ODBC:connect</font>
<em>str-data-source</em> <em>str-user</em>
<em>str-password</em>)</b><br>
<b>parameter:</b> <em>str-data-source</em> - The ODBC dara
source.<br>
<b>parameter:</b> <em>str-user</em> - The user name.<br>
<b>parameter:</b> <em>str-password</em> - The password of the
user.<br>
<p><b>return:</b> <tt>true</tt> on success, <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
Connect to a data-source with a user name and password. The
data-source name must be configured first via ODBC administrative
tools, i.e. a control applet on Win32.
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (ODBC:connect "mydatabase" "johndoe" "secret")
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_query" id="ODBC_query"></a>
<h3><font color="#CC0000">ODBC:query</font></h3>
<b>syntax: (<font color="#CC0000">ODBC:query</font>
<em>str-sql</em>)</b><br>
<b>parameter:</b> <em>str-sql</em> - The SQL statement string.<br>
<p><b>return:</b> <tt>true</tt> on success, <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
Send and SQL string for database manipulation
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (query "select * from someTable")
 (query "delete from addresses")
 (query "insert into fruits values ('apples', 11)")
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_num-cols" id="ODBC_num-cols"></a>
<h3><font color="#CC0000">ODBC:num-cols</font></h3>
<b>syntax: (<font color="#CC0000">ODBC:num-cols</font>)</b><br>
<p><b>return:</b> Number of columns in the result set.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_columns-atts" id="ODBC_columns-atts"></a>
<h3><font color="#CC0000">ODBC:columns-atts</font></h3>
<b>syntax: (<font color="#CC0000">ODBC:columns-atts</font>
<em>num-col</em>)</b><br>
<b>parameter:</b> <em>num-col</em> - The number of the column,
starting witth 1 for the first.<br>
<p><b>return:</b> A list of attributes for a column in a result
set.</p>
<p>&nbsp;</p>
Returns a list with the columname SQL, data type number and
required column size when displaying in a string. For the data type
number and SQL data type see the file <tt>sql.h</tt> on your
platform OS, i.e. <tt>SQL_VARCHAR</tt>, <tt>SQL_INTEGER</tt> etc.
<p>&nbsp;</p>
before using <tt>ODBC:column-atts</tt> a query has to be performed.
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (ODBC:column-atts 1)  =&gt; ("name" 12 20)
</pre></blockquote>
The first column has the header <tt>"name"</tt> with data type
<tt>SQL_VARCHAR</tt> (12) and a maximum display width of 20
characters.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_fetch-row" id="ODBC_fetch-row"></a>
<h3><font color="#CC0000">ODBC:fetch-row</font></h3>
<b>syntax: (<font color="#CC0000">ODBC:fetch-row</font>)</b><br>
<p><b>return:</b> A list of items of a result set row.</p>
<p>&nbsp;</p>
Fetches a row of data after a previously executed
<tt>ODBC:query</tt>. Each data is formatted as a string, and can be
converted using newLISP conversion functions like: <tt>int</tt>,
<tt>float</tt> or <tt>string</tt>.
<p>&nbsp;</p>
If data types are unknown then <tt>ODBC:column-atts</tt> can be
used to retrieve the data type number.
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (ODBC:fetch-row) =&gt; ("apples" "11")
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_affected-rows" id="ODBC_affected-rows"></a>
<h3><font color="#CC0000">ODBC:affected-rows</font></h3>
<b>syntax: (<font color=
"#CC0000">ODBC:affected-rows</font>)</b><br>
<p><b>return:</b> Number of rows affected by the last SQL
statement.</p>
<p>&nbsp;</p>
Returns the number of rows affected by an <tt>insert</tt>,
<tt>update</tt> or <tt>delete</tt>, <tt>ODBX:query</tt> operation.
After a <tt>select</tt> operation the number -1 will be returned.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_tables" id="ODBC_tables"></a>
<h3><font color="#CC0000">ODBC:tables</font></h3>
<b>syntax: (<font color="#CC0000">ODBC:tables</font>)</b><br>
<p><b>return:</b> A list of tables in the current database
connection.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_columns" id="ODBC_columns"></a>
<h3><font color="#CC0000">ODBC:columns</font></h3>
<b>syntax: (<font color="#CC0000">ODBC:columns</font>
<em>str-table-name</em>)</b><br>
<b>parameter:</b> <em>str-table-name</em> - The name of the
table.<br>
<p><b>return:</b> A list of list of columns and their
attributes.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ODBC_close-db" id="ODBC_close-db"></a>
<h3><font color="#CC0000">ODBC:close-db</font></h3>
<b>syntax: (<font color="#CC0000">ODBC:close-db</font>)</b><br>
<p><b>return:</b> <tt>true</tt> on success, <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
Closes a database connection.
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>pop3.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>pop3.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;pop3.lsp
<p>POP3 mail retrieval routines</p>
<b>Version:</b> 2.0 - eliminated old net-send syntax<br>
<b>Author:</b> Lutz Mueller et al., 2001, 2002, 2008<br>
<p>&nbsp;</p>
<h2>POP3 mail retrieval routines</h2>
<p>&nbsp;</p>
Only the module <tt>pop3.lsp</tt> is required, not other libraries
need to be present. Not all mailservers support all functions.
<p>&nbsp;</p>
To use the module put a <tt>load</tt> statement at the top of your
file:
<pre>
 (load "/usr/share/newlisp/modules/pop3.lsp")
 
</pre>
<p>&nbsp;</p>
<h2>Function overview</h2>
Load down all messages and put them in a directory
<tt>messages/</tt>:
<pre>
 (POP3:get-all-mail "user" "password" "pop.my-isp.com" "messages/")
 
</pre>
<p>&nbsp;</p>
Load down only new messages:
<pre>
 (POP3:get-new-mail "user" "password" "pop.my-isp.com" "messages/")
 
</pre>
<p>&nbsp;</p>
Delete messages, which have not been read:
<pre>
 (POP3:delete-old-mail "user" "password" "pop.my-isp.com")
 
</pre>
<p>&nbsp;</p>
Delete all messages:
<pre>
 (POP3:delete-all-mail "user" "password" "pop.my-isp.com")
 
</pre>
<p>&nbsp;</p>
Get a list of status numbers <tt>(<em>totalMessages</em>,
<em>totalBytes</em>, <em>lastRead</em>)</tt>:
<pre>
 (POP3:get-mail-status "user" "password" "pop.my-isp.com")
 
</pre>
<p>&nbsp;</p>
Get error message for failed all/new/status function:
<pre>
 (POP3:get-error-text)
 
</pre>
All functions return <tt>nil</tt> on error and
<tt>POP3:get-error-text</tt> can be used to retrieve the error
text.
<p>&nbsp;</p>
The variable <tt>POP3:debug-flag</tt> can be set to <tt>true</tt>
to display all of the dialog with the pop2 mail server.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="POP3_get-all-mail" id="POP3_get-all-mail"></a>
<h3><font color="#CC0000">POP3:get-all-mail</font></h3>
<b>syntax: (<font color="#CC0000">POP3:get-all-mail</font>
<em>str-user</em> <em>str-password</em> <em>str-server</em>
<em>str-dir</em>)</b><br>
<b>parameter:</b> <em>str-user</em> - The user ID.<br>
<b>parameter:</b> <em>str-password</em> - The password for the user
ID.<br>
<b>parameter:</b> <em>str-dir</em> - The local directory for the
retrieved mail.<br>
<p><b>return:</b> On success <tt>true</tt> else <tt>nil</tt>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="POP3_get-new-mail" id="POP3_get-new-mail"></a>
<h3><font color="#CC0000">POP3:get-new-mail</font></h3>
<b>syntax: (<font color="#CC0000">POP3:get-new-mail</font>
<em>str-user</em> <em>str-password</em> <em>str-server</em>
<em>str-dir</em>)</b><br>
<b>parameter:</b> <em>str-user</em> - The user ID.<br>
<b>parameter:</b> <em>str-password</em> - The password for the user
ID.<br>
<b>parameter:</b> <em>str-dir</em> - The local directory for the
retrieved mail.<br>
<p><b>return:</b> On success returns <tt>true</tt> else
<tt>nil</tt>.</p>
On failure use <tt>POP3:get-error-text</tt> to retrieve the text of
the last error which occured.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="POP3_get-mail-status" id="POP3_get-mail-status"></a>
<h3><font color="#CC0000">POP3:get-mail-status</font></h3>
<b>syntax: (<font color="#CC0000">POP3:get-mail-status</font>
<em>str-user</em> <em>str-password</em>
<em>str-server</em>)</b><br>
<b>parameter:</b> <em>str-user</em> - The user ID.<br>
<b>parameter:</b> <em>str-password</em> - The password for the user
ID.<br>
<p><b>return:</b> A list of status information.</p>
The list of status information returned contains the following
items: (<em>totalMessages</em>, <em>totalBytes</em>,
<em>lastRead</em>)
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="POP3_delete-old-mail" id="POP3_delete-old-mail"></a>
<h3><font color="#CC0000">POP3:delete-old-mail</font></h3>
<b>syntax: (<font color="#CC0000">POP3:delete-old-mail</font>
<em>str-user</em> <em>str-password</em>
<em>str-server</em>)</b><br>
<b>parameter:</b> <em>str-user</em> - The user ID.<br>
<b>parameter:</b> <em>str-password</em> - The password for the user
ID.<br>
<p><b>return:</b> The number of messages left on the server.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="POP3_delete-all-mail" id="POP3_delete-all-mail"></a>
<h3><font color="#CC0000">POP3:delete-all-mail</font></h3>
<b>syntax: (<font color="#CC0000">POP3:delete-all-mail</font>
<em>str-user</em> <em>str-password</em>
<em>str-server</em>)</b><br>
<b>parameter:</b> <em>str-user</em> - The user ID.<br>
<b>parameter:</b> <em>str-password</em> - The password for the user
ID.<br>
<p><b>return:</b> The number of the message last read.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="POP3_get-error-text" id="POP3_get-error-text"></a>
<h3><font color="#CC0000">POP3:get-error-text</font></h3>
<b>syntax: (<font color=
"#CC0000">POP3:get-error-text</font>)</b><br>
<p><b>return:</b> The text of the last error occurred.</p>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>postscript.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>postscript.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;postscript.lsp
<p>Routines for creating postscript files</p>
<b>Version:</b> 1.0 - comments redone for automatic
documentation<br>
<b>Version:</b> 1.1 - changed write-line syntax of 9.9.9<br>
<b>Author:</b> Lutz Mueller, July 2006<br>
<p>&nbsp;</p>
<h2>Routines for creating postscript files</h2>
To use this module include the following <tt>load</tt> statement at
the beginning of the program file:
<pre>
 (load "/usr/share/newlisp/modules/postscript.lsp")
 
</pre>
<p>&nbsp;</p>
See <a href=
"http://newlisp.org/index.cgi?Postscript">http://newlisp.org/index.cgi?Postscript</a>
for many examples with source code.
<p>&nbsp;</p>
Postscript files can be viewed using: <tt>open filename.ps</tt> on
Mac OS X or using the Ghostscript program on Unix's or Win32 to
convert to PDF or any graphics file format. Best quality is
achieved on Mac OS X when using the Preview.app viewer for loading
the postscript files and converting to PDF or bitmapped formats
like JPEG, PNG, GIF by re-saving.
<p>&nbsp;</p>
If not using Mac OS X look for Ghostscript here: <a href=
"http://www.ghostscript.com/">www.ghostscript.com</a> and here:
<a href=
"http://www.cs.wisc.edu/~ghost/">www.cs.wisc.edu/~ghost/</a>
<p>&nbsp;</p>
NOTE! on some Mac OS X installations it is necessary to quit out of
the Preview.app completely before viewing a <tt>.ps</tt> file for
the first time. Subsequent views of <tt>.ps</tt> documents are
fine.
<p>&nbsp;</p>
On Linux/UNIX systems the following command can be used to convert
a <tt>.ps</tt> file to a <tt>.pdf</tt> file:
<pre>
   gs -sDEVICE=pdfwrite -dBATCH -sOutputFile=aFile.pdf -r300 aFile.ps
 
</pre>
Most functions work like in <em>turtle graphics</em> relative to
the current position of an imaginary drawing pen with an
orientation of 0 to 360 degree starting streight up: 0 and moving
clockwise right 90, down 180, left 270, up and 360 degrees. Other
functions work on absolute X,Y coordinates.
<p>&nbsp;</p>
The coordinate system starts on the bottom left with 0,0 and
extends on a 8 1/2 x 11 inch letter page to <tt>x': 612, 'y</tt>:
792, 12 points for each inch. The functions <tt>ps:transpose</tt>
and <tt>ps:scale</tt> can be used to move the origin point
<tt><em>x=0, y=0</em></tt> or scale from points to other
measurements.
<p>&nbsp;</p>
<br>
<center>
<h2>Turtle coordinate positioning and turning</h2>
</center>
<p>&nbsp;</p>
All commands in this group change the turtle position or
orientation.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_goto" id="ps_goto"></a>
<h3><font color="#CC0000">ps:goto</font></h3>
<b>syntax: (<font color="#CC0000">ps:goto</font> <em>num-x</em>
<em>num-y</em>)</b><br>
<b>parameter:</b> <em>num-x</em> - The new x coordinate.<br>
<b>parameter:</b> <em>num-y</em> - The new y coordinate.<br>
<p><b>return:</b> The postscript output.</p>
Moves to position <em>num-x</em>, <em>num-y</em>. On a US letter
page of 612 by 792 point positions are defined with 72 points per
inch.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_move" id="ps_move"></a>
<h3><font color="#CC0000">ps:move</font></h3>
<b>syntax: (<font color="#CC0000">ps:move</font>
<em>num-s</em>)</b><br>
<b>parameter:</b> <em>num-s</em> - The distance to move the
pen.<br>
<p><b>return:</b> The postscript output.</p>
Move turtle forward distance <em>s</em> without drawing.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_turn" id="ps_turn"></a>
<h3><font color="#CC0000">ps:turn</font></h3>
<b>syntax: (<font color="#CC0000">ps:turn</font>
<em>num-dg</em>)</b><br>
<b>parameter:</b> <em>num-dg</em> - The degrees to turn: -360 to 0
to 360.<br>
<p><b>return:</b> The postscript output.</p>
Turn the turtle pen by <em>dg</em> degrees. The degrees are
specified in angles from 0 to 360. For turning clockwise specifiy
positive values. Negative degrees turn the turtle pen counter
clockwise.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_angle" id="ps_angle"></a>
<h3><font color="#CC0000">ps:angle</font></h3>
<b>syntax: (<font color="#CC0000">ps:angle</font>
<em>num-dg</em>)</b><br>
<b>parameter:</b> <em>num-dg</em> - Angle degrees from 0 to
360.<br>
<p><b>return:</b> The postscript output.</p>
Set the turtle angle to <em>num-dg</em> degrees. Upwards is 0,
right 45, downwards 180 and left 270i degrees.
<p>&nbsp;</p>
<br>
<center>
<h2>Line drawing</h2>
</center>
<p>&nbsp;</p>
All commands in this group change the turtle position or
orientation, or both.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_draw" id="ps_draw"></a>
<h3><font color="#CC0000">ps:draw</font></h3>
<b>syntax: (<font color="#CC0000">ps:draw</font>
<em>num-s</em>)</b><br>
<b>parameter:</b> <em>num-s</em> - Distance to draw.<br>
<p><b>return:</b> The postscript output.</p>
Draw going forward distance <em>num-s</em>. Moves the turtle
forward by the amount of points specified in <em>num-s</em> and
draws with the current line color set by <tt>ps:line-color</tt>.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_drawto" id="ps_drawto"></a>
<h3><font color="#CC0000">ps:drawto</font></h3>
<b>syntax: (<font color="#CC0000">ps:drawto</font> <em>x</em>
<em>y</em>)</b><br>
<b>parameter:</b> <em>x</em> - The x coordinate to draw to.<br>
<b>parameter:</b> <em>y</em> - The y coordinate to draw to.<br>
<p><b>return:</b> The postscript output.</p>
Draw a line to point <em>x</em>, <em>y</em>. Moves the turtle to
point <em>x</em>, <em>y</em> like <tt>(ps:goto x y)</tt>, but also
draws a line from the old to the new position. The turtle position
is changed to the new point <em>x</em>, <em>y</em> and the
orientation is changed to the orientaion of the line drawn.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_line" id="ps_line"></a>
<h3><font color="#CC0000">ps:line</font></h3>
<b>syntax: (<font color="#CC0000">ps:line</font>
<em>list-of-lists</em>)</b><br>
<b>parameter:</b> <em>list-of-lists</em> - A list of turtle
movements or Bezier curves.<br>
<p><b>return:</b> The postscript output.</p>
Draw a multipart line. <em>lists</em> are turtle movements
(<em>num-dg</em> <em>num-s</em>), or Bezier curves (<em>x1</em>
<em>y1</em> <em>x2</em> <em>y2</em> <em>x3</em> <em>y3</em>)
starting from the last turtle coordinates <em>x0</em>, <em>y0</em>
and finishing at <em>x3</em>, <em>y3</em>. All Bezier coordinates
are relative to the previous turtle position and orientation.
<p>&nbsp;</p>
The turtle position and orientation are changed after drawing the
line.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_bezier" id="ps_bezier"></a>
<h3><font color="#CC0000">ps:bezier</font></h3>
<b>syntax: (<font color="#CC0000">ps:bezier</font> <em>x1</em>
<em>y1</em> <em>x2</em> <em>y2</em> <em>x3</em>
<em>y3</em>)</b><br>
<b>parameter:</b> - <em>x1,y1</em> Bezier coordinates of
<em>p1</em> relative to <em>p0</em> = 0,0<br>
<b>parameter:</b> - <em>x2,y2</em> Bezier coordinates of
<em>p2</em> relative to <em>p0</em> = 0,0<br>
<b>parameter:</b> - <em>x3,y3</em> Bezier coordinates of
<em>p3</em> relative to <em>p0</em> = 0,0<br>
<p><b>return:</b> The postscript output.</p>
Draw a Bezier curve. The Bezier curve starts at point <em>p0</em>
which is the current turtle position and stops at point <em>p3</em>
which is at offset <em>x3</em> and <em>y3</em> relative to starting
point. The turtle orientation after the drwaing the Bezier curve is
perpendicular to the Bezier curve baseline <em>p0</em> to
<em>p3</em>.
<p>&nbsp;</p>
<br>
<center>
<h2>Closed shapes, filling and clipping</h2>
</center>
<p>&nbsp;</p>
All functions in this group leave the turtle position and
orientation unchanged.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_polygon" id="ps_polygon"></a>
<h3><font color="#CC0000">ps:polygon</font></h3>
<b>syntax: (<font color="#CC0000">ps:polygon</font> <em>rad</em>
<em>n</em> [<em>fill</em>])</b><br>
<b>parameter:</b> <em>rad</em> - Radius.<br>
<b>parameter:</b> <em>n</em> - Number of sides.<br>
<b>parameter:</b> <em>fill</em> - Optional fill flag.<br>
<p><b>return:</b> The postscript output.</p>
Draw a polygon with radius <em>rad</em> and <em>n</em> sides.
<em>fill</em> is <tt>true</tt> or <tt>nil</tt> (default) for
optional color fill The polygon is drawn around the current turtle
position. The turtle position or orientation is not changed.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_circle" id="ps_circle"></a>
<h3><font color="#CC0000">ps:circle</font></h3>
<b>syntax: (<font color="#CC0000">ps:circle</font> <em>rad</em>
[<em>fill</em>])</b><br>
<b>parameter:</b> <em>rad</em> - Radius of the circle.<br>
<b>parameter:</b> <em>fill</em> - Optional fill flag.<br>
<p><b>return:</b> The postscript output.</p>
Draw a circle with radius <em>rad</em>. The optional <em>fill</em>
flag with either <tt>true</tt> or <tt>nil</tt> (default) indicates
if the circle is filled with the fill color specified by
<tt>ps:fill-color</tt>. The circle is drawn around the current
turtle position. The turtle position or orientation is not changed.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_ellipse" id="ps_ellipse"></a>
<h3><font color="#CC0000">ps:ellipse</font></h3>
<b>syntax: (<font color="#CC0000">ps:ellipse</font> <em>x-rad</em>
<em>y-rad</em> <em>start</em> <em>end</em> [<em>fill</em>])</b><br>
<b>parameter:</b> <em>x-rad</em> - The x axis radius.<br>
<b>parameter:</b> <em>y-rad</em> - The y axis radius.<br>
<b>parameter:</b> <em>start</em> - The start angle.<br>
<b>parameter:</b> <em>end</em> - The end angle.<br>
<p><b>return:</b> The postscript output.</p>
Draw an ellipse with optional <em>fill</em> either <tt>true</tt> or
<tt>nil</tt>(default). The ellipse is drawn around the current
turtle position with the Y axis oriented like the turtle. For
<em>x-rad</em>, <em>y-rad</em> set to 0, 360 an ellipse is drawn
For a partiual radius the opening is closed by a line resulting in
segment shape, i.e. -90, 90 would result in a half circle from the
left to the right of the turtle. The turtle position or orientation
is not changed.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_pie" id="ps_pie"></a>
<h3><font color="#CC0000">ps:pie</font></h3>
<b>syntax: (<font color="#CC0000">ps:pie</font> <em>rad</em>
<em>width</em> [<em>fill</em>])</b><br>
<b>parameter:</b> <em>rad</em> - The radius of the pie.<br>
<b>parameter:</b> <em>width</em> - The width of the pie slice as an
angle.<br>
<b>parameter:</b> <em>fill</em> - An optional fill flag for color
fill<br>
<p><b>return:</b> The postscript output.</p>
Draw a pie slice with optional <em>fill</em> either <tt>true</tt>
or <tt>nil</tt> (default). The left edge of the pie is in turtle
orientation. The width angle spreads clockwise. The pie is drawn
around the current turtle position. The turtle position or
orientation is not changed.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_petal" id="ps_petal"></a>
<h3><font color="#CC0000">ps:petal</font></h3>
<b>syntax: (<font color="#CC0000">ps:petal</font> <em>x</em>
<em>y</em> [<em>fill</em>])</b><br>
<b>parameter:</b> <em>x</em> - The <em>x1</em> coordinate of the
underlying Bezier curve <em>p0</em> to <em>p1</em> <em>p2</em>
<em>p3</em>.<br>
<b>parameter:</b> <em>y</em> - The <em>y1</em> coordinate of the
underlying Bezier curve <em>p0</em> to <em>p1</em> <em>p2</em>
<em>p3</em>.<br>
<b>parameter:</b> <em>fill</em> - An optional fill flag for color
fill.<br>
<p><b>return:</b> The postscript output.</p>
Draws a petal using a Bezier curve with optional <em>fill</em>
either <tt>true</tt> or <tt>nil</tt> (default). The <em>x</em> and
<em>y</em> parameters are relative to to the current position. The
petal is drawn with the tip at the current turtle position and
oriented in the direction of the turtle. The turtle position or
orientation is not changed.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_shape" id="ps_shape"></a>
<h3><font color="#CC0000">ps:shape</font></h3>
<b>syntax: (<font color="#CC0000">ps:shape</font>
<em>list-of-lists</em> [<em>fill</em>])</b><br>
<b>parameter:</b> <em>list-of-lists</em> - A list of turtle
movements and/or Bezier curves.<br>
<b>parameter:</b> <em>fill</em> - An optional fill flag for color
fill.<br>
<p><b>return:</b> The postscript output.</p>
Draws a shape with optional <em>fill</em> or eiher <tt>true</tt> or
<tt>nil</tt> (default). <em>lists</em> is either a turtle movement
(<em>dg</em> <em>s</em>) or a Bezier curve (<em>x1</em> <em>y1</em>
<em>x2</em> <em>y2</em> <em>x3</em> <em>y3</em>) starting from the
last turtle coordinates <em>x0</em>, <em>y0</em> and finishing at
<em>x3</em>, <em>y3</em>. All Bezier coordinates are relative to
the previous turtle position and orientation The turtle position or
orientation is not changed.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_clip" id="ps_clip"></a>
<h3><font color="#CC0000">ps:clip</font></h3>
<b>syntax: (<font color="#CC0000">ps:clip</font>
<em>list-of-lists</em>)</b><br>
<b>parameter:</b> <em>list-of-lists</em> - A list of turtle
movements and/or Bezier curves.<br>
<p><b>return:</b> The postscript output.</p>
Define a clipping path using turtle movements (<em>dg</em>
<em>s</em>) and Bezier curves (<em>x1</em> <em>y1</em> <em>x2</em>
<em>y2</em> <em>x3</em> <em>y3</em>) starting from the last turtle
coordinates <em>x0</em>, <em>y0</em> and finishing at <em>x3</em>,
<em>y3</em>. All Bezier coordinates are relative to the previous
turtle position and orientation.
<p>&nbsp;</p>
Before redefining the clipping area <tt>(ps:gsave)</tt> should be
used to save the old graphics state parameters, after clipping and
drawing in the clipped area the graphics state should be restored
using <tt>(ps:grestore)</tt>. The turtle position or orientation is
not changed.
<p>&nbsp;</p>
<br>
<center>
<h2>Text output and clipping</h2>
</center>
<p>&nbsp;</p>
All functions in this goup move the turtle by the textlength drawn
and change the orientation when the text is arcing.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_text" id="ps_text"></a>
<h3><font color="#CC0000">ps:text</font></h3>
<b>syntax: (<font color="#CC0000">ps:text</font>
<em>str-text</em>)</b><br>
<b>parameter:</b> <em>str-text</em> - The text to draw.<br>
<p><b>return:</b> The postscript output.</p>
Draws text. <tt>(...)</tt> parenthesis in text should be escaped
with double <tt>\\</tt> characters as in in <tt>\\(</tt> or
<tt>\\)</tt>, when limiting the string with double quotes <tt>"'.
When limiting the string with '{,}</tt> braces a single <tt>\'
character is enough as in '\(</tt> and <tt>\)</tt>. Before drawing,
a font can be specified, the default font after loading the
<tt>postscript.lsp</tt> modules is Helvetica 12 points and using
the current <tt>ps:line-color</tt> for drawing.
<p>&nbsp;</p>
The turtle position is changed to the baseline after the last
character. The turtle orientation stays the same.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_textoutline" id="ps_textoutline"></a>
<h3><font color="#CC0000">ps:textoutline</font></h3>
<b>syntax: (<font color="#CC0000">ps:textoutline</font>
<em>str-text</em> [<em>fill</em>])</b><br>
<b>parameter:</b> <em>str-text</em> - The text to draw.<br>
<b>parameter:</b> <em>fill</em> - An optional fill flag for color
fill.<br>
Draw a text outline with optional color <em>fill</em> specified by
either <tt>true</tt> or <tt>nil</tt> (default). Before drawing a
font can be specified the default font after loading
<tt>postscript.lsp</tt> is Helvetica 12 points, the text is drawn
using the current line color.
<p>&nbsp;</p>
The turtle position is changed to the baseline after the last
character. The turtle orientation stays the same.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_textarc" id="ps_textarc"></a>
<h3><font color="#CC0000">ps:textarc</font></h3>
<b>syntax: (<font color="#CC0000">ps:textarc</font> <em>rad</em>
<em>str-text</em>)</b><br>
<b>parameter:</b> <em>rad</em> - The radius of imaginary circle
path for text.<br>
<b>parameter:</b> <em>str-text</em> - The text to draw.<br>
<p><b>return:</b> The postscript output.</p>
Draw text around a circle. The text is drawn out side of an
imaginary circle starting at turtle position and orientation and
drawing at the current tangent. To bend text around a circle, draw
a sequence of single characters with the same radius. For a
positive radius text goes outside the circle and clockwise. For a
negative radius text goes inside the circle and counter lock wise.
The turtle position and orientation move along the radius.
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_textarcoutline" id="ps_textarcoutline"></a>
<h3><font color="#CC0000">ps:textarcoutline</font></h3>
<b>syntax: (<font color="#CC0000">ps:textarcoutline</font>
<em>rad</em> <em>str-text</em> [<em>fill</em>])</b><br>
<b>parameter:</b> <em>rad</em> - The radius of imaginary circle
path for text.<br>
<b>parameter:</b> <em>str-text</em> - The text to draw.<br>
<b>parameter:</b> <em>fill</em> - An optional fill flag for color
fill.<br>
<p><b>return:</b> The postscript output.</p>
Draw text around a circle. Same as <tt>(ps:textarc ...)</tt> but
the text is drawn as ane outline and can be filled with
ps:fill-color when specifying the optional fill flag. The turtle
position and orientation move along the radius.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_textclip" id="ps_textclip"></a>
<h3><font color="#CC0000">ps:textclip</font></h3>
<b>syntax: (<font color="#CC0000">ps:textclip</font>
<em>str-text</em>)</b><br>
<b>parameter:</b> <em>str-text</em> - The text used as a clipping
shape.<br>
<p><b>return:</b> The postscript output.</p>
A text outline is used as a clipping path. Before redefining the
clipping area <tt>(ps:gsave)</tt> should be used to save the old
graphics state parameters, after clipping and drawing in the
clipped area the graphics state should be restored using
<tt>(ps:grestore)</tt>. The turtle moves with the text shape
clipped.
<p>&nbsp;</p>
<br>
<center>
<h2>Global settings</h2>
</center>
<p>&nbsp;</p>
Several global variables control fill and line color, line width
and other parameters influencing the scaling and orientation of the
coordinate system when drawing. Most have default settings when not
explicitely specified.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_font" id="ps_font"></a>
<h3><font color="#CC0000">ps:font</font></h3>
<b>syntax: (<font color="#CC0000">ps:font</font> <em>str-name</em>
<em>num-size</em>)</b><br>
<b>parameter:</b> <em>str-name</em> - The font name.<br>
<b>parameter:</b> <em>num-size</em> - The size of the font in
points.<br>
<p><b>return:</b> The postscript output.</p>
The current font is set for all subsequent text operations.
Depending on the version of the Postsrcipt viewer or device
installed different fonts are available.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_translate" id="ps_translate"></a>
<h3><font color="#CC0000">ps:translate</font></h3>
<b>syntax: (<font color="#CC0000">ps:translate</font> <em>x</em>
<em>y</em>)</b><br>
<b>syntax: (<font color="#CC0000">ps:translate</font>)</b><br>
<b>parameter:</b> <em>x</em> - The new x position of coordinate
origin.<br>
<b>parameter:</b> <em>y</em> - The new y position of coordinate
origin.<br>
<p><b>return:</b> The postscript output.</p>
Move the coordinate origin. By default the origin 0,0 is in the
bottom left corner of the page. <em>x</em> and <em>y</em> values
extend to the right and top. When now <em>x</em>, <em>y</em> values
are specified the coordinate origin is moved to the current
position of the turtle.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_scale" id="ps_scale"></a>
<h3><font color="#CC0000">ps:scale</font></h3>
<b>syntax: (<font color="#CC0000">ps:scale</font> <em>x</em>
<em>y</em>)</b><br>
<b>parameter:</b> <em>x</em> - The new x scale factor.<br>
<b>parameter:</b> <em>y</em> - The new y scale factor.<br>
<p><b>return:</b> The postscript output.</p>
Scale the coordinate space. Scaling factors are 1.0 by default and
compress for factors less 1.0 or expand for factors bigger than
1.0. With a scaling factor for x = 2.0 each point position
specified would cover the double of horizontal distance on the
page. Scaling factors can be saved on the graphics state stack
using the function <tt>(ps:gsave)</tt>.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_rotate" id="ps_rotate"></a>
<h3><font color="#CC0000">ps:rotate</font></h3>
<b>syntax: (<font color="#CC0000">ps:rotate</font>
<em>deg</em>)</b><br>
<b>parameter:</b> <em>deg</em> - The degrees of rotation: -360 to 0
to 360.<br>
<p><b>return:</b> The postscript output.</p>
Rotate the coordinate space. The coorinate space is rotated to the
right for positive angles and to the left for negative angles. The
current rotation angle is 0 by default. The rotation angle is part
of the graphics state saved by the <tt>(ps:gsave function)</tt>.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_gsave" id="ps_gsave"></a>
<h3><font color="#CC0000">ps:gsave</font></h3>
<b>syntax: (<font color="#CC0000">ps:gsave</font>)</b><br>
<p><b>return:</b> The postscript output.</p>
Saves the current graphics state. The function pushes the current
graphics state on a special stack, from where it can be resored
using <tt>(ps:grestore)</tt>.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_grestore" id="ps_grestore"></a>
<h3><font color="#CC0000">ps:grestore</font></h3>
<b>syntax: (<font color="#CC0000">ps:grestore</font>)</b><br>
<p><b>return:</b> The postscript output.</p>
Restores the graphics state from the stack.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_line-width" id="ps_line-width"></a>
<h3><font color="#CC0000">ps:line-width</font></h3>
<b>syntax: (<font color="#CC0000">ps:line-width</font>
<em>points</em>)</b><br>
<b>parameter:</b> <em>points</em> - The line width in points.<br>
<p><b>return:</b> The postscript output.</p>
Sets the line width in points for line drawing and the outlines
drawn by shapes and text outlines.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_line-cap" id="ps_line-cap"></a>
<h3><font color="#CC0000">ps:line-cap</font></h3>
<b>syntax: (<font color="#CC0000">ps:line-cap</font>
<em>mode</em>)</b><br>
<b>parameter:</b> <em>mode</em> - The line termination shape
mode.<br>
<p><b>return:</b> The postscript output.</p>
Sets the line termination shape:
<pre>
    0 square line at the end
    1 semicircular line
    2 square line end projecting beyond the end of the line
      by half line width
 
</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_line-join" id="ps_line-join"></a>
<h3><font color="#CC0000">ps:line-join</font></h3>
<b>syntax: (<font color="#CC0000">ps:line-join</font>
<em>mode</em>)</b><br>
<b>parameter:</b> <em>mode</em> - The line join mode.<br>
<p><b>return:</b> The postscript output.</p>
Sets the line join mode:
<pre>
    0 outer edges of lines mitered together
    1 outer edges of lines rounded together
    2 for lin-cap with 0 the resulting noth
      is filled to produce a chamfered corner
 
</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_line-color" id="ps_line-color"></a>
<h3><font color="#CC0000">ps:line-color</font></h3>
<b>syntax: (<font color="#CC0000">ps:line-color</font> <em>R</em>
<em>G</em> <em>B</em>)</b><br>
<b>parameter:</b> <em>R</em> - The red color value.<br>
<b>parameter:</b> <em>G</em> - The green color value.<br>
<b>parameter:</b> <em>B</em> - The blue color value.<br>
<b>syntax: (<font color="#CC0000">ps:line-color</font>
<em>str-hex</em>)</b><br>
<b>parameter:</b> <em>str-hex</em> - A hex string specifying the
line color.<br>
<p><b>return:</b> The postscript output.</p>
Set color for line drawing. Color values assume the following
value:
<pre>
    R - value for red 0.0 to 1.0
    G - value for green 0.0 to 1.0
    B - value for blue 0.0 to 1.0
 
</pre>
In an alternative syntax color values can be specified in a hex
string:
<p>&nbsp;</p>
<em>str-hex</em> is a hex string constant <tt>"000000"</tt> to
<tt>"FFFFFF"</tt> Colors are specified as usual in HTML coding.
Each to two hex digits define a color: <tt>rrggbb</tt>.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_fill-color" id="ps_fill-color"></a>
<h3><font color="#CC0000">ps:fill-color</font></h3>
<b>syntax: (<font color="#CC0000">ps:fill-color</font> <em>R</em>
<em>G</em> <em>B</em>)</b><br>
<b>parameter:</b> <em>R</em> - The red color value.<br>
<b>parameter:</b> <em>G</em> - The green color value.<br>
<b>parameter:</b> <em>B</em> - The blue color value.<br>
<b>syntax: (<font color="#CC0000">ps:fill-color</font>
<em>str-hex</em>)</b><br>
<b>parameter:</b> <em>str-hex</em> - A hex string specifying the
line color.<br>
<p><b>return:</b> The postscript output.</p>
Set color for shape filling. Color values assume the following
value:
<pre>
    R - value for red 0.0 to 1.0
    B - value for green 0.0 to 1.0
    G - value for blue 0.0 to 1.0
 
</pre>
In an alternative syntax color values can be specified in a hex
string:
<p>&nbsp;</p>
<em>str-hex</em> is a hex string constant <tt>"000000"</tt> to
<tt>"FFFFFF"</tt> Colors are specified as usual in HTML coding.
Each two hex digits define a color: <tt>rrggbb</tt>.
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_render" id="ps_render"></a>
<h3><font color="#CC0000">ps:render</font></h3>
<b>syntax: (<font color="#CC0000">ps:render</font>)</b><br>
<p><b>return:</b> The postscript output.</p>
Show on monitor (Mac OS X only) Uses the Mac OS X Preview.app to
convert and view postscript files ending in <tt>.ps</tt>.
<p>&nbsp;</p>
On Unix and Win32 systems use (ps:save <em>filename</em>) to save
the postscript file and convert and view it using ghostscript from
<a href="http://www.ghostscript.com/">www.ghostscript.com/</a> and
<a href="http://www.cs.wisc.edu/~ghost/">www.cs.wisc.edu/~ghost</a>
.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="ps_save" id="ps_save"></a>
<h3><font color="#CC0000">ps:save</font></h3>
<b>syntax: (<font color="#CC0000">ps:save</font>
<em>str-filename</em>)</b><br>
<b>parameter:</b> <em>str-filename</em> - The filename.<br>
<p><b>return:</b> The postscript output.</p>
Save to <em>str-filename</em>. The filename should end in
<tt>.ps</tt> to be recognized as a Postscript file on Mac OS X,
where it can be viewed with the standrad Preview.app, by double
clicking the filename. On Linux/UNIX Ghostsript can be used to
convert the file to any image format or to view the file. The
Quality of display depends on the underlying OS and hardware.
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>smtp.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>smtp.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;smtp.lsp
<p>Send mail using SMTP protocol</p>
<b>Version:</b> 2.0 - March 2008, Cormullion added AUTH PLAIN
authentication<br>
<b>Author:</b> Lutz Mueller 2001, Cormullion 2008<br>
<p>&nbsp;</p>
<h2>Routines for sending mail</h2>
This module implements routines to communicate with a SMTP mail
server for sending email. To use this module include the following
<tt>load</tt> statement at the beginning of the program file:
<pre>
 
 (load "/usr/share/modules/newlisp/smtp.lsp") 
 
</pre>
To see debugging information:
<pre>
(set 'debug-flag true)
</pre>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="SMTP_send-mail" id="SMTP_send-mail"></a>
<h3><font color="#CC0000">SMTP:send-mail</font></h3>
<b>syntax: (<font color="#CC0000">SMTP:send-mail</font>
<em>str-from</em> <em>str-to</em> <em>str-subject</em>
<em>str-message</em> <em>str-server</em>i [<em>str-usr</em>
str-pass&gt;]])</b><br>
<b>parameter:</b> <em>str-from</em> - The email address of the
sender.<br>
<b>parameter:</b> <em>str-to</em> - The email address of the
recipient.<br>
<b>parameter:</b> <em>str-subject</em> - The subject line of the
email.<br>
<b>parameter:</b> <em>str-message</em> - The message part of the
email.<br>
<b>parameter:</b> <em>str-server</em> - The address of the SMTP
server.<br>
<b>parameter:</b> <em>str-user</em> - Optional user name for
authentication.<br>
<b>parameter:</b> <em>str-pass</em> - Optional password for
authentication.<br>
<p><b>return:</b> On success <tt>true</tt>, on failure
<tt>nil</tt>.</p>
In case the function fails returning <tt>nil</tt>, the function
<tt>SMTP:get-error-text</tt> can be used to receive the error text.
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
(SMTP:send-mail "jdoe@asite.com" "somebody@isp.com" "Greetings" 
   "How are you today? - john doe -" "smtp.asite.com" "jdoe" "secret") 
</pre></blockquote>
This logs in to the server, tries to authenticate using the
username <tt>jdoe</tt> and password <tt>secret</tt> (if supplied),
and sends an email with the format:
<pre>
 
  From:    jdoe@asite.com 
  To:      somebody@isp.com 
  Subject: Greetings 
  Message: How are you today? - John Doe - 
 
</pre>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>sqlite3.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>sqlite3.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;sqlite3.lsp
<p>SQLite3 database interface routines</p>
<b>Version:</b> 1.6 - comments redone for automatic
documentation<br>
<b>Version:</b> 1.7 - a fix getting types when null values are
present (thanks Dmitry)<br>
<b>Version:</b> 1.8 - a fix to make 64-Bit integers work (thanks
Dmitry)<br>
<b>Version:</b> 1.9 - new library detection routine<br>
<b>Version:</b> 2.0 - added documentation for close<br>
<b>Author:</b> Lutz Mueller, 2004-2008<br>
<p>&nbsp;</p>
<h2>Module for SQLite3 database bindings</h2>
To use this module include the following <tt>load</tt> statement at
the beginning of the program file:
<pre>
 (load "/usr/share/newlisp/modules/sqlite3.lsp")
 
</pre>
<p>&nbsp;</p>
SQLite version 3.0 introduced a new database format and is
incompatible whith the previous 2.1 to 2.8 format. Old SQLite 2.x
based databases can be converted using the old and new sqlite
client application:
<p>&nbsp;</p>
sqlite OLD.DB .dump | sqlite3 NEW.DB
<p>&nbsp;</p>
While in sqlite 2.8 all returned fields where of string type,
SQLite3 returns, text, integer or float. Blobs are returned as text
and NULLs are returned as nil.
<p>&nbsp;</p>
See also the documentation at <a href=
"http://sqlite.org">sqlite.org</a>
<p>&nbsp;</p>
<h2>Requirements:</h2>
One of the libraries sqlite3.dll for Win32 or libsqlite3.so for
UNIX like operating systems is required from http://www.sqlite.org.
<p>&nbsp;</p>
SQLite is an <em>in-process</em> database. The library contains the
whole database system. An extra database server is not required.
SQLite also has limited mutiuser capabilities for accessing a
common database from several programs at the same time. See the
documentaion at <a href="http://sqlite.org">sqlite.org</a> for
details.
<p>&nbsp;</p>
The following is a short example how to use SQLite3:
<p>&nbsp;</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (sql3:open "MYDB")      ; opens/creates a database returns a handle (ignore)
                         ; or 'nil' on failure

 (sql3:sql "select * from mytable;")    ; make a SQL query, return result

 (sql3:error)            ; return error text

 (sql3:close)            ; close the database
</pre></blockquote>
Function calls returning <tt>nil</tt> signal that an error has
occurred. The function <tt>sql3:error</tt> can then be used to get
details about the error as a text string.
<p>&nbsp;</p>
At the bottom of the source file <tt>sqlite3.lsp</tt> a test
routine called <tt>test-sqlite3</tt> can be found to test for
correct installation of SQLite.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_open" id="sql3_open"></a>
<h3><font color="#CC0000">sql3:open</font></h3>
<b>syntax: (<font color="#CC0000">sql3:open</font>
<em>str-db-name</em>)</b><br>
<b>parameter:</b> <em>str-db-name</em> - The name of the
database.<br>
<p><b>return:</b> A database handle (discard), or <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
Opens or creates a database. If the database does exist it gets
opened, else a new database with the name given is created. If
trying to open a database that already has been opened <tt>nil</tt>
is returned and an error text can be retrieved using
<tt>sql3:error</tt>.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_close" id="sql3_close"></a>
<h3><font color="#CC0000">sql3:close</font></h3>
<b>syntax: (<font color="#CC0000">sql3:close</font>)</b><br>
<p><b>return:</b> Returns <tt>true</tt> on success;</p>
<p>&nbsp;</p>
Closes the currently open database.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_sql" id="sql3_sql"></a>
<h3><font color="#CC0000">sql3:sql</font></h3>
<b>syntax: (<font color="#CC0000">sql3:sql</font>
<em>str-sql</em>)</b><br>
<b>parameter:</b> <em>str-sql</em> - The SQL statement.<br>
<p>&nbsp;</p>
Executes the SQL statement in <em>str-sql</em>. For <tt>select</tt>
statements an array of the result set is returned or <tt>()</tt>
for the empty set. For other statements <tt>true</tt> is returned
for a successful outcome. On failure <tt>nil</tt> is returened and
<tt>sql3:error</tt> can be used to retrieve the error text.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_rowid" id="sql3_rowid"></a>
<h3><font color="#CC0000">sql3:rowid</font></h3>
<b>syntax: (<font color="#CC0000">sql3:rowid</font>)</b><br>
<p><b>return:</b> The last row id from last <tt>insert</tt>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_tables" id="sql3_tables"></a>
<h3><font color="#CC0000">sql3:tables</font></h3>
<b>syntax: (<font color="#CC0000">sql3:tables</font>)</b><br>
<p><b>return:</b> A list of tables in the database.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_columns" id="sql3_columns"></a>
<h3><font color="#CC0000">sql3:columns</font></h3>
<b>syntax: (<font color="#CC0000">sql3:columns</font>
<em>str-tabel-name</em>)</b><br>
<p><b>return:</b> A list of column names for a table.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_changes" id="sql3_changes"></a>
<h3><font color="#CC0000">sql3:changes</font></h3>
<b>syntax: (<font color="#CC0000">sql3:changes</font>)</b><br>
<p><b>return:</b> The Number of rows changed/affected by the last
SQL statement.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_timeout" id="sql3_timeout"></a>
<h3><font color="#CC0000">sql3:timeout</font></h3>
<b>syntax: (<font color="#CC0000">sql3:timeout</font>
<em>num-milli-seconds</em>)</b><br>
<p><b>return:</b> <tt>true</tt> on success or <tt>nil</tt> on
failure.</p>
<p>&nbsp;</p>
Sets busy timeout in milliseconds.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="sql3_error" id="sql3_error"></a>
<h3><font color="#CC0000">sql3:error</font></h3>
<b>syntax: (<font color="#CC0000">sql3:error</font>)</b><br>
<p><b>return:</b> The error text of the last error occured in
<tt>sql3:sql</tt>.</p>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>stat.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>stat.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;stat.lsp
<p>Basic statistics and plotting library</p>
<b>Version:</b> 2.0 - fixed plot an plotXY routines for gnuplot<br>
<b>Author:</b> Lutz Mueller, 2001<br>
<p>&nbsp;</p>
<h2>Functions for statistics and plotting with GNU plot</h2>
To use this module it has to be loaded at the beginning of the
program file:
<pre>
 (load (append (env "NEWLISPDIR") "/modules/stat.lsp"))
 
</pre>
All functions work on integers and floats or a mix of both.
<em>lists</em> are normal LISP lists. <em>matrices</em> are lists
of lists, one list for each row in the two dimensional data matrix.
See the function <tt>stat:matrix</tt> on how to make matrices from
lists.
<p>&nbsp;</p>
This file also shows how to use some of the built in matrix math
functions like <tt>multiply</tt>, <tt>transpose</tt>,
<tt>invert</tt> and <tt>fft</tt>.
<p>&nbsp;</p>
Note, that the plot functions need <tt>gnuplot</tt> installed, a
free graphing package available for most operating systems. See:
<a href="http://www.gnuplot.info/">http://www.gnuplot.info/</a>
<p>&nbsp;</p>
If no Gnuplot program is found by the module all non-plot routines
are still usable.
<p>&nbsp;</p>
<center>
<h2>Plot functions (requires <tt>gnuplot</tt>)</h2>
</center>
The plot functions rely on a $HOME/tmp directory on Mac OS X and
other Unix or <tt>c:\tmp</tt> or <tt>c:\tmp</tt> on Windows. When
loading the module, a message will be printed to stdout if either
the gnuplot executable or a temporary directory cannot be found.
<p>&nbsp;</p>
The plot functions are designed for interactive use with no special
options, titles on the top or the X and Y axes. Only a legend is
printed in the top right corner to identify different data ranges.
<p>&nbsp;</p>
To produce more refined graphics the file <tt>tmp/plot</tt> can be
edited to produce a different output. The Gnuplot command-file
<tt>plot</tt> will look for data files in the same directory. One
file for each data range.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_plot" id="stat_plot"></a>
<h3><font color="#CC0000">stat:plot</font></h3>
<b>syntax: (<font color="#CC0000">stat:plot</font> <em>p1</em>
<em>p2</em> ... <em>pN</em>)</b><br>
<b>parameter:</b> <em>p1</em> - First list of data.<br>
<b>parameter:</b> <em>p2</em> - Second list of data.<br>
<b>parameter:</b> <em>pN</em> - Nth list o data<br>
<p><b>return:</b> The process ID of the gnuplot process.</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
    (stat:plot '(1 2 3 4 5 4 3 2 1))

    (set 'data-A '(1 2 3 2 1 2 3))
    (set 'data-B '(2 2 2 2 2 2 2))
    (stat:plot data-A data-B)
</pre></blockquote>
The first example plots one data range. It will appear as
<tt>series-1</tt> in the legend. In the second example two data
ranges are drawn each in a distinct color the variable names
<tt>data-X</tt> and <tt>data-Y</tt> will be used as labeld in the
legend.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_plotXY" id="stat_plotXY"></a>
<h3><font color="#CC0000">stat:plotXY</font></h3>
<b>syntax: (<font color="#CC0000">stat:plotXY</font>
<em>list-X</em> <em>list-Y</em> [<em>srt-style</em>])</b><br>
<b>parameter:</b> <em>list-X</em> - List of x-coordinates to
plot.<br>
<b>parameter:</b> <em>list-Y</em> - List of y-coordinates to
plot.<br>
<b>parameter:</b> <em>str-style</em> - Optional style parameter,
e.g. "line"<br>
<p><b>return:</b> The process ID of the gnuplot process.</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
    (set 'data-X (random 1 10 100))
    (set 'data-Y (random 2 8 100))
    (stat:plotXY data-X data-Y)
</pre></blockquote>
Data points X,Y are plotted on the plane. If no style is specyfied
points appear as little crosses. The style <tt>"line"</tt> would
connect all data points.<br>
<center>
<h2>General uni- and bi- variate statistics</h2>
</center>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_sum" id="stat_sum"></a>
<h3><font color="#CC0000">stat:sum</font></h3>
<b>syntax: (<font color="#CC0000">stat:sum</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers,<br>
<p><b>return:</b> Sum of data in list <em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_mean" id="stat_mean"></a>
<h3><font color="#CC0000">stat:mean</font></h3>
<b>syntax: (<font color="#CC0000">stat:mean</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> The mean of data in list <em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_var" id="stat_var"></a>
<h3><font color="#CC0000">stat:var</font></h3>
<b>syntax: (<font color="#CC0000">stat:var</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> The variance of the data in list <em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_sdev" id="stat_sdev"></a>
<h3><font color="#CC0000">stat:sdev</font></h3>
<b>syntax: (<font color="#CC0000">stat:sdev</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> Standard deviation of data in list
<em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_sum-sq" id="stat_sum-sq"></a>
<h3><font color="#CC0000">stat:sum-sq</font></h3>
<b>syntax: (<font color="#CC0000">stat:sum-sq</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> Sum of <em>x*x</em> data elements in list
<em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_sum-xy" id="stat_sum-xy"></a>
<h3><font color="#CC0000">stat:sum-xy</font></h3>
<b>syntax: (<font color="#CC0000">stat:sum-xy</font> <em>X</em>
<em>Y</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<b>parameter:</b> <em>Y</em> - A list of numbers.<br>
<p><b>return:</b> Sum of products <em>x*y</em> data elements in
lists <em>X</em> and <em>Y</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_cov" id="stat_cov"></a>
<h3><font color="#CC0000">stat:cov</font></h3>
<b>syntax: (<font color="#CC0000">stat:cov</font> <em>X</em>
<em>Y</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<b>parameter:</b> <em>Y</em> - A list of numbers.<br>
<p><b>return:</b> Covariance of data in lists <em>X</em> and
<em>Y</em></p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_sum-d2" id="stat_sum-d2"></a>
<h3><font color="#CC0000">stat:sum-d2</font></h3>
<b>syntax: (<font color="#CC0000">stat:sum-d2</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> Sum of squared diffs <em>(x - mean(X))^2</em> in
list <em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_corr" id="stat_corr"></a>
<h3><font color="#CC0000">stat:corr</font></h3>
<b>syntax: (<font color="#CC0000">stat:corr</font> <em>X</em>
<em>Y</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<b>parameter:</b> <em>Y</em> - A list of numbers.<br>
<p><b>return:</b> Correlation coefficient of lists <em>X</em> and
<em>Y</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_regression" id="stat_regression"></a>
<h3><font color="#CC0000">stat:regression</font></h3>
<b>syntax: (<font color="#CC0000">stat:regression</font> <em>X</em>
<em>Y</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<b>parameter:</b> <em>Y</em> - A list of numbers.<br>
returns <em>(b0 b1)</em> coefficients of regression <em>Y = b0 +
b1*X</em>.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_fit" id="stat_fit"></a>
<h3><font color="#CC0000">stat:fit</font></h3>
<b>syntax: (<font color="#CC0000">stat:fit</font> <em>X</em>
<em>Y</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<b>parameter:</b> <em>Y</em> - A list of numbers.<br>
<p><b>return:</b> fitted line based on <tt>(stat:regression X
Y)</tt>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_sum-d2xy" id="stat_sum-d2xy"></a>
<h3><font color="#CC0000">stat:sum-d2xy</font></h3>
<b>syntax: (<font color="#CC0000">stat:sum-d2xy</font> <em>X</em>
<em>Y</em>)</b><br>
<p><b>return:</b> Sum of squared differences <em>(x - y)^2</em> of
elements in lists <em>X</em> and <em>Y</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_moments" id="stat_moments"></a>
<h3><font color="#CC0000">stat:moments</font></h3>
<b>syntax: (<font color="#CC0000">stat:moments</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> Calculates all moments of list <em>X</em>.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_f-prob" id="stat_f-prob"></a>
<h3><font color="#CC0000">stat:f-prob</font></h3>
<b>syntax: (<font color="#CC0000">stat:f-prob</font> <em>F</em>
<em>df1</em> <em>df2</em>)</b><br>
<b>parameter:</b> <em>F</em> - The variance ratio.<br>
<b>parameter:</b> <em>df1</em> - Degrees of freedom.<br>
<b>parameter:</b> <em>df2</em> - Degrees of freedom.<br>
<p><b>return:</b> Probablity of F variance ratio for <em>df1</em>,
<em>df2</em> degress of freedom.</p>
<br>
<center>
<h2>Multi variate statistics</h2>
</center>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_multiple-reg" id="stat_multiple-reg"></a>
<h3><font color="#CC0000">stat:multiple-reg</font></h3>
<b>syntax: (<font color="#CC0000">stat:multiple-reg</font>
<em>X</em> <em>offY</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<b>parameter:</b> <em>offY</em> - Zero based offset into
<em>Y</em>.<br>
<p><b>return:</b> Multiple regression of vars in <em>X</em> onto
<em>Y</em> at <em>offsetY</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_cov-matrix" id="stat_cov-matrix"></a>
<h3><font color="#CC0000">stat:cov-matrix</font></h3>
<b>syntax: (<font color="#CC0000">stat:cov-matrix</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> Covariance matrix of <em>X</em> with <em>N</em>
rows and <em>k</em> columns.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_corr-matrix" id="stat_corr-matrix"></a>
<h3><font color="#CC0000">stat:corr-matrix</font></h3>
<b>syntax: (<font color="#CC0000">stat:corr-matrix</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> Correlation matrix of <em>X</em> with <em>N</em>
rows and <em>k</em> columns.</p>
<br>
<center>
<h2>Time series</h2>
</center>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_smooth" id="stat_smooth"></a>
<h3><font color="#CC0000">stat:smooth</font></h3>
<b>syntax: (<font color="#CC0000">stat:smooth</font> <em>X</em>
<em>alpha</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<b>parameter:</b> <em>alpha</em> - Smoothing coefficient <em>0 &lt;
alpha &lt; 1</em>.<br>
<p><b>return:</b> Exponentially smoothed sequence in
<em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_lag" id="stat_lag"></a>
<h3><font color="#CC0000">stat:lag</font></h3>
<b>syntax: (<font color="#CC0000">stat:lag</font> <em>X</em>
<em>n</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<b>parameter:</b> <em>n</em> - Lag n.<br>
<p><b>return:</b> A differenced list of <em>X</em> with a lag of
<em>n</em>.</p>
If the length of list <em>X</em> is <em>l</em> then the length of
the resulting differenced list is <em>l - n</em>.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_cumulate" id="stat_cumulate"></a>
<h3><font color="#CC0000">stat:cumulate</font></h3>
<b>syntax: (<font color="#CC0000">stat:cumulate</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - A list of numbers.<br>
<p><b>return:</b> The cumulated list of <em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_power" id="stat_power"></a>
<h3><font color="#CC0000">stat:power</font></h3>
<b>syntax: (<font color="#CC0000">stat:power</font>
<em>TS</em>)</b><br>
<b>parameter:</b> <em>TS</em> - A time series of numbers.<br>
<p><b>return:</b> The power spectrum of a time series</p>
<br>
<center>
<h2>Matrix and list utilities</h2>
</center>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_matrix" id="stat_matrix"></a>
<h3><font color="#CC0000">stat:matrix</font></h3>
<b>syntax: (<font color="#CC0000">stat:matrix</font> <em>C1</em>
.... <em>CN</em>)</b><br>
<b>parameter:</b> <em>C1</em> - The first column list of
values.<br>
<b>parameter:</b> <em>CN</em> - The Nth column list of values.<br>
<p><b>return:</b> A matrix off <em>1</em> to <em>N</em> columns
<em>C</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_diagonal" id="stat_diagonal"></a>
<h3><font color="#CC0000">stat:diagonal</font></h3>
<b>syntax: (<font color="#CC0000">stat:diagonal</font>
<em>item</em> <em>N</em>)</b><br>
<b>parameter:</b> <em>item</em> - The diagonal element.<br>
<p><b>return:</b> A diagonal matrix of length <em>N</em> with
<em>item</em> in the diagonal.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_get-diagonal" id="stat_get-diagonal"></a>
<h3><font color="#CC0000">stat:get-diagonal</font></h3>
<b>syntax: (<font color="#CC0000">stat:get-diagonal</font>
<em>X</em>)</b><br>
<b>parameter:</b> <em>X</em> - An matrix filled with numbers.<br>
<p><b>return:</b> A list from the diagonal elements of
<em>X</em>.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="stat_mat-map" id="stat_mat-map"></a>
<h3><font color="#CC0000">stat:mat-map</font></h3>
<b>syntax: (<font color="#CC0000">stat:mat-map</font> <em>op</em>
<em>A</em> <em>B</em>)</b><br>
<p><b>return:</b> Matrix map, e.g. <tt>(stat:mat-map + A
B)</tt>.</p>
Used for adding and subtracting matrices.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>unix.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>unix.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;unix.lsp
<p>Itreface to various UNIX libc functions</p>
<b>Version:</b> 0.1 alpha - mostly untested<br>
<b>Author:</b> L.M. 2006-Sep-12, lutz@nuevatec.com<br>
<p>&nbsp;</p>
<h2>UNIX libc function support</h2>
To use this module include the following line at the beginning of
the program file:
<pre>
 (load "/usr/share/newlisp/modules/unix.lsp")
 
</pre>
<p>&nbsp;</p>
All functions are named like the UNIX functions they implelement
but with the unix: namespace prefix. All functions work similar to
the UNIX libc functions they implement but return <tt>nil</tt>
instead of <tt>-1</tt> for failure and <tt>true</tt> instead of 0
for success. Note that in the implementaion most parameter types
are casted even though redundant in most situation. The addional
cast avoids segfaulting of the imported functions when supplied
with wrong parameter types, i.e. for strings. Some times the
<tt>int</tt> cast is used to supply default values of an argument,
in case the argument is not given.
<p>&nbsp;</p>
The arguments are given in, is the order used by the equivalent
libc functions, not the order as used by shell commandline
utilities with the same name.
<p>&nbsp;</p>
Some of the wordings from functions descriptions are taken from BSD
man pages.
<p>&nbsp;</p>
This module contains wrappers for the following libc functions:
<tt>getpid</tt>, <tt>getppid</tt>, <tt>getuid</tt>,
<tt>geteuid</tt>, <tt>getgid</tt>, <tt>getegid</tt>,
<tt>setuid</tt>, <tt>seteuid</tt>, <tt>setgid</tt>,
<tt>setegid</tt>, <tt>kill</tt>, <tt>chmod</tt>, <tt>ioctl</tt>,
<tt>mkfifo</tt>, <tt>mltemp</tt>, <tt>syslog</tt>
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_getpid" id="unix_getpid"></a>
<h3><font color="#CC0000">unix:getpid</font></h3>
<b>syntax: (<font color="#CC0000">unix:getpid</font>)</b><br>
<p><b>return:</b> Returns the current process ID</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_getppid" id="unix_getppid"></a>
<h3><font color="#CC0000">unix:getppid</font></h3>
<b>syntax: (<font color="#CC0000">unix:getppid</font>)</b><br>
<p><b>return:</b> Returns the parents process ID.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_getuid" id="unix_getuid"></a>
<h3><font color="#CC0000">unix:getuid</font></h3>
<b>syntax: (<font color="#CC0000">unix:getuid</font>)</b><br>
<p><b>return:</b> Returns the real and effective user ID</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_geteuid" id="unix_geteuid"></a>
<h3><font color="#CC0000">unix:geteuid</font></h3>
<b>syntax: (<font color="#CC0000">unix:geteuid</font>)</b><br>
<p><b>return:</b> Returns the effective user ID</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_getgid" id="unix_getgid"></a>
<h3><font color="#CC0000">unix:getgid</font></h3>
<b>syntax: (<font color="#CC0000">unix:getgid</font>)</b><br>
<p><b>return:</b> Returns the real group ID.</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_getegid" id="unix_getegid"></a>
<h3><font color="#CC0000">unix:getegid</font></h3>
<b>syntax: (<font color="#CC0000">unix:getegid</font>)</b><br>
<p><b>return:</b> Returns the effective group ID</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_setuid" id="unix_setuid"></a>
<h3><font color="#CC0000">unix:setuid</font></h3>
<b>syntax: (<font color="#CC0000">unix:setuid</font>
<em>num-id</em>)</b><br>
<b>parameter:</b> <em>num-id</em> - The number of the real and
effective user IDs to set.<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
Set the real and effective user IDs. If no argument or the argument
given is not a number then sets current real and effective user
IDs.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_seteuid" id="unix_seteuid"></a>
<h3><font color="#CC0000">unix:seteuid</font></h3>
<b>syntax: (<font color="#CC0000">unix:seteuid</font>
<em>num-id</em>)</b><br>
<b>parameter:</b> <em>num-id</em> - The number of the effective
user ID to set.<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
Sets the effective user ID. If no argument or the argument given is
not a number then sets current effective user ID.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_setgid" id="unix_setgid"></a>
<h3><font color="#CC0000">unix:setgid</font></h3>
<b>syntax: (<font color="#CC0000">unix:setgid</font>
<em>num-id</em>)</b><br>
<b>parameter:</b> <em>num-id</em> - The number of the real and
effective group ID to set.<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
Sets the real and effective group IDs. If no argument or the
argument given is not a number then sets current real and effective
group IDs.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_setegid" id="unix_setegid"></a>
<h3><font color="#CC0000">unix:setegid</font></h3>
<b>syntax: (<font color="#CC0000">unix:setegid</font>
<em>num-id</em>)</b><br>
<b>parameter:</b> <em>num-id</em> - the number of the effective
group ID to set.<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
Sets the effective group ID. If no argument or the argument given
is not a number then sets current effective group ID.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_kill" id="unix_kill"></a>
<h3><font color="#CC0000">unix:kill</font></h3>
<b>syntax: (<font color="#CC0000">unix:kill</font> <em>num-pid</em>
<em>num-sig</em>)</b><br>
<b>parameter:</b> <em>num-pid</em> - The process ID of the process
to send a signal to.<br>
<b>parameter:</b> <em>num-sig</em> - The signal to send to the
process in <em>num-pid</em><br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
Send a signal to a process. If no argument is given for
<em>num-sig</em> or <em>num-sig</em> is zero, then the validiy of
the <em>num-pid</em> is checked and <tt>nil</tt> is returned for an
invalid <em>num-pid</em>. Note that kill works has parameters
backwards compared to the kill used in on the shell command line.
<tt>(unix:kill ...)</tt> works like the libc <tt>kill()</tt>
counterpart.
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (unix:kill 2652 9)
</pre></blockquote>
Sends the <tt>SIGKILL</tt> signal 9 to process ID <tt>2652</tt>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_chmod" id="unix_chmod"></a>
<h3><font color="#CC0000">unix:chmod</font></h3>
<b>syntax: (<font color="#CC0000">unix:chmod</font>
<em>str-path</em> <em>num-mode</em>)</b><br>
<b>parameter:</b> <em>str-path</em> - The path name of the file or
directory<br>
<b>parameter:</b> <em>num-option</em> - The permission pattern as a
number<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
Sets the permission pattern for a UNIX filesystem node. The pattern
is best given as an octal number, i.e.: <tt>0755</tt> for a
-rwxr-xr-x permission pattern, <tt>0644</tt> for
<tt>-rw-r--r--</tt> etc. If no <em>int-option</em> is given
unix:chmod assumes <tt>0644</tt>.
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (unix:chmod "myfile.txt" 0644)
</pre></blockquote>
Gives <tt>-rw-r--r--</tt> permission to the file
<tt>myfile.txt</tt>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_ioctl" id="unix_ioctl"></a>
<h3><font color="#CC0000">unix:ioctl</font></h3>
<b>syntax: (<font color="#CC0000">unix:ioctl</font> <em>num-id</em>
<em>num-request</em> <em>str-argp</em>)</b><br>
<b>parameter:</b> <em>num-id</em> - A number for file
descriptor.<br>
<b>parameter:</b> <em>num-request</em> - A number for a
request.<br>
<b>parameter:</b> <em>str-argp</em> - An argument string.<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
Manipulates the underlying device parameters of special files.
<p>&nbsp;</p>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_mkfifo" id="unix_mkfifo"></a>
<h3><font color="#CC0000">unix:mkfifo</font></h3>
<b>syntax: (<font color="#CC0000">unix:mkfifo</font>
<em>str-path</em> <em>num-mode</em>)</b><br>
<b>parameter:</b> <em>str-path</em> - The path of the new fifo
filename.<br>
<b>parameter:</b> <em>num-mode</em> - The persmissions mode
number.<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
Creates a new fifo file with name path. The access permissions are
specified by mode and restricted by the <tt>umask(2)</tt> of the
calling process.
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (unix:mkfifo "myfifo" 0755)
</pre></blockquote>
This will create a fifo node with <tt>prwxr-xr-x</tt> permissions
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_mktemp" id="unix_mktemp"></a>
<h3><font color="#CC0000">unix:mktemp</font></h3>
<b>syntax: (<font color="#CC0000">unix:mktemp</font>
<em>str-template</em>)</b><br>
<b>parameter:</b> <em>str-template</em> - A file template with Xs
appended, i.e. <tt>/tmp/temp.XXXX</tt>.<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
The function takes the given file name template and overwrites a
portion of it to create a file name. This file name is guaranteed
not to exist at the time of function invocation and is suitable for
use by the application. The template may be any file name with some
number of 'X's appended to it, for example
<tt>/tmp/temp.XXXXXX</tt>. The trailing 'X's are replaced with a
unique alphanumeric combination.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="unix_syslog" id="unix_syslog"></a>
<h3><font color="#CC0000">unix:syslog</font></h3>
<b>syntax: (<font color="#CC0000">unix:syslog</font>
<em>num-priority</em> <em>str-message</em> ...)</b><br>
<b>parameter:</b> <em>num-priority</em> - The priority of the
message.<br>
<b>parameter:</b> <em>str-message</em> - The message string and
template in printf format.<br>
<p><b>return:</b> Returns <tt>true</tt> or <tt>nil</tt> depending
on success</p>
<p>&nbsp;</p>
The function writes message to the system message logger. The
message is then written to the system console, log files, logged-in
users, or forwarded to other machines as appropriate.
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>xmlrpc-client.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>xmlrpc-client.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;xmlrpc-client.lsp
<p>XMLRPC protocol client routines</p>
<b>Version:</b> 0.3 - comments redone for automatic
documentation<br>
<b>Version:</b> 0.4 - multiple indices with <tt>nth</tt> redone to
be compatible with future versions<br>
<b>Author:</b> Lutz Mueller, 2005<br>
<p>&nbsp;</p>
<h2>Functions for XML-RPC client</h2>
To use this module include a <tt>load</tt> statement at the
beginning of the program:
<pre>
 (load "/usr/share/newlisp/modules/xmlrpc-client.lsp")
 
</pre>
<p>&nbsp;</p>
The script <tt>xmlrpc.cgi</tt> together with a webserver or the
script <tt>xmlrpc-server</tt> for a freestanding XML-RPC server can
be used for testing. Both scripts implement a method
<tt>newLISP.evalString</tt>. This module contains a client side
function for this method.
<p>&nbsp;</p>
For further information on XML-RPC consult <a href=
"http://www.xmlrpc.com/">http://www.xmlrpc.com/</a> .
<p>&nbsp;</p>
Whenever a connection could be made, method functions will return a
response formatted by the XML-RPC server in XML. If a connection
failed the function will return <tt>nil</tt> and a call to
<tt>(XMLRPC:error)</tt> will return and error text.
<p>&nbsp;</p>
If the XML received cannot be parsed into SXML, the function
returns <tt>nil</tt> and <tt>(XMLRPC:error)</tt> will return an XML
error. SXML is XML transformed into LISP S-expressions. If the XML
received is syntactically correct but not correctly formatted, XML
garbage is returned or <tt>nil</tt> is returned and an error
message in <tt>(XMLRPC:error)</tt>.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="XMLRPC_system.listMethods" id=
"XMLRPC_system.listMethods"></a>
<h3><font color="#CC0000">XMLRPC:system.listMethods</font></h3>
<b>syntax: (<font color="#CC0000">XMLRPC:system.listMethods</font>
<em>str-url</em>)</b><br>
<b>parameter:</b> <em>str-url</em> - The URL of the XML-RPC
server<br>
<p><b>return:</b> A list or methods supported.</p>
The server at <em>url</em> returns a list of methods supported.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="XMLRPC_system.methodHelp" id=
"XMLRPC_system.methodHelp"></a>
<h3><font color="#CC0000">XMLRPC:system.methodHelp</font></h3>
<b>syntax: (<font color="#CC0000">XMLRPC:system.methodHelp</font>
<em>str-url</em> <em>str-method-name</em>)</b><br>
<b>parameter:</b> <em>str-url</em> - The URL of the XML-RPC
server.<br>
<b>parameter:</b> <em>method-name</em> - The name of the method to
get help for.<br>
<p><b>return:</b> Help for <em>str-method-name</em></p>
The server at <em>str-url</em> returns help for the method in
<em>str-method-name</em>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="XMLRPC_system.methodSignatures" id=
"XMLRPC_system.methodSignatures"></a>
<h3><font color=
"#CC0000">XMLRPC:system.methodSignatures</font></h3>
<b>syntax: (<font color=
"#CC0000">XMLRPC:system.methodSignatures</font> <em>str-url</em>
<em>str-method-name</em>)</b><br>
<b>parameter:</b> <em>str-url</em> - The URL of the XML-RPC
server.<br>
<b>parameter:</b> <em>method-name</em> - The name of the method to
get the signature for.<br>
<p><b>return:</b> The signature for a server method.</p>
Gets the calling parameter conventions (signature) for a method
<em>method-name</em> at <em>str-url</em>.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="XMLRPC_execute" id="XMLRPC_execute"></a>
<h3><font color="#CC0000">XMLRPC:execute</font></h3>
<b>syntax: (<font color="#CC0000">XMLRPC:execute</font>
<em>str-url</em> <em>str-xml-request</em>)</b><br>
<b>parameter:</b> <em>str-url</em> - The URL of the XML-RPC
server.<br>
<b>parameter:</b> <em>str-xml-request</em> - A XML formatted
request.<br>
<p><b>return:</b> XML formatted server response</p>
This is a generic method for making XML-RPC requests. The request
must be XML formatted correctly by the sender (client).
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="XMLRPC_newLISP.evalString" id=
"XMLRPC_newLISP.evalString"></a>
<h3><font color="#CC0000">XMLRPC:newLISP.evalString</font></h3>
<b>syntax: (<font color="#CC0000">XMLRPC:newLISP.evalString</font>
<em>str-url</em> <em>str-expression</em>)</b><br>
<b>parameter:</b> <em>str-url</em> - The URL of the XML-RPC
server.<br>
<b>parameter:</b> <em>str-expression</em> - The expresssion to be
evaluated in a string.<br>
<p><b>return:</b> The result of the expression evaluation.</p>
The expression in <em>str-expression</em> is encoded in base64 and
then transmitted to the remote server.
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="XMLRPC_error" id="XMLRPC_error"></a>
<h3><font color="#CC0000">XMLRPC:error</font></h3>
<b>syntax: (<font color="#CC0000">XMLRPC:error</font>)</b><br>
<p><b>return:</b> Error text of last error occured.</p>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="generator" content=
"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 13), see www.w3.org">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>zlib.lsp</title>
<link rel="stylesheet" type="text/css" href="newlispdoc.css">
</head>
<body style="margin: 20px;" text="#111111" bgcolor="#FFFFFF" link=
"#376590" vlink="#551A8B" alink="#FFAA28">
<blockquote>
<center>
<h1>zlib.lsp</h1>
</center>
<p><a href="index.html">Module index</a></p>
<br>
<br>
<br>
Module:&nbsp;zlisp.lsp
<p>Functions for compression/decompression with zlib</p>
<b>Version:</b> 1.1 - comments redone for automatic
documentation<br>
<b>Version:</b> 1.2 - new library detection routine<br>
<b>Author:</b> April 13th 2006, L.M.<br>
<p>&nbsp;</p>
<h2>Functions for compression/decompression with zlib</h2>
For this module a platform sepcific library from <a href=
"http://www.zlib.net/">www.zib.net</a> is needed.
<p>&nbsp;</p>
The module offers two types of compression/decompression support:
one for fast in memory compression/decopmpression, the other for GZ
compatible file compression and decompression.
<p>&nbsp;</p>
Before using the module it must be loaded:
<pre>
 (load "/usr/share/newlisp/modules/zlib.lsp")
 
</pre>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="zlib_squeeze" id="zlib_squeeze"></a>
<h3><font color="#CC0000">zlib:squeeze</font></h3>
<b>syntax: (<font color="#CC0000">zlib:squeeze</font>
<em>str-buffer</em>)</b><br>
<p><b>return:</b> The string containing the compressed
<em>str-buffer</em>.</p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (set 'str-z  (zlib:squeeze str))
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="zlib_unsqueeze" id="zlib_unsqueeze"></a>
<h3><font color="#CC0000">zlib:unsqueeze</font></h3>
<b>syntax: (<font color="#CC0000">zlib:unsqueeze</font>
<em>str-buffer</em>)</b><br>
<p><b>return:</b> The original uncompressed string from a
compressed buffer in <em>str-buffer</em></p>
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (set 'str (zlib:unsqueeze str-z))
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="zlib_gz-read-file" id="zlib_gz-read-file"></a>
<h3><font color="#CC0000">zlib:gz-read-file</font></h3>
<b>syntax: (<font color="#CC0000">zlib:gz-read-file</font>
<em>str-file-name</em>)</b><br>
<p><b>return:</b> A string buffer with the original contents.</p>
<p>&nbsp;</p>
Uncompresses the GZ compressed file in <em>str-file-name</em>.
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (set 'buff (zlib:gz-read-file "myfile.gz"))
</pre></blockquote>
<p>&nbsp;</p>
<center>- § -</center>
<p>&nbsp;</p>
<a name="zlib_gz-write-file" id="zlib_gz-write-file"></a>
<h3><font color="#CC0000">zlib:gz-write-file</font></h3>
<b>syntax: (<font color="#CC0000">zlib:gz-write-file</font>
<em>str-file-name</em> <em>str-buffer</em>)</b><br>
<p><b>return:</b> The number of bytes in <em>str-buffer</em>.</p>
<p>&nbsp;</p>
Does a GZ compatible comrpression of a buffer in
<em>str-buffer</em> and writes it to the file in
<em>str-file-name</em>.
<p>&nbsp;</p>
<b>example:</b>
<blockquote>
<pre>
 (zlib:gz-write-file "myfile.gz" buff) 
</pre></blockquote>
<p>&nbsp;</p>
<center>- ∂ -</center>
<br>
<center><font face='Arial' size='-2' color='#444444'>generated with
<a href="http://newlisp.org">newLISP</a>&nbsp; and <a href=
"http://newlisp.org/newLISPdoc.html">newLISPdoc</a></font></center>
</blockquote>
</body>
</html>
