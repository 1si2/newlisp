#!/usr/bin/newlisp

; qa-net - test network routines for server mode
;
; tests: net-eval
; tests http mode of: load, save, read-file, write-file, delete-file
; 
; assumes newlisp executable in the current directory:
;     newlisp-x.x.x/
;
; usage to test on local host:
;
;        ./newlisp qa-net  
;
; usage to test on a remote host
; 
;        ./newlisp qa-net http://mysite.com:10001//home/test
; or 
;        ./newlisp qa-net http://localhost:4711//Users/Lutz/newlisp-8.9.8
;
; running this test on Win32:
;
;        newlisp qa-net
;
; On Win32 this test may have timing issues, try running again.
; 
;

(println)
(println "Testing network API and server mode")

(when (not (or (file? "newlisp") (file? "newlisp.exe")))
	(println ">>>>> Need a newlisp executable in the current directory for qa-net")
	(exit)
)

(set 'start (time-of-day))

(when (> (sys-info -1) 512)  ; IPv6
	(println "Testing IPv6 networking functions")
	(set 'targetURL (or 
			(main-args 2)
			(append "http://[::1]:10001/" (real-path) "/qa-junk.txt")))

	(replace "\\" targetURL "/") ; for Win32

	(if (not (ends-with targetURL "/qa-junk.txt"))
		(set 'targetURL (append targetURL "/qa-junk.txt")))

	(set 'host (1 ((regex {http://(.*?)\]:} targetURL) 3)))
	(set 'port (int ((regex {http://.*?\]:(\d+)/} targetURL) 3)))
	(set 'file-path ((regex {http://.*\]:\d+/(.*)} targetURL) 3))
)

(when (<= (sys-info -1) 512) ; IPv4
	(println "Testing IPv4 networking functions")
	(set 'targetURL (or 
		(main-args 2)
		(append "http://localhost:10001/" (real-path) "/qa-junk.txt")))

	(replace "\\" targetURL "/") ; for Win32

	(if (not (ends-with targetURL "/qa-junk.txt"))
		(set 'targetURL (append targetURL "/qa-junk.txt")))

	(set 'host ((regex "http://(.*?):" targetURL) 3))
	(set 'port (int ((regex "http://.*?:(\\d+)/" targetURL) 3)))
	(set 'file-path ((regex "http://.*:\\d+/(.*)" targetURL) 3))
)


(println)
(println "target URL: " targetURL)

(println "host: " host)
(println "port: " port)
(println "path: " file-path)

; check if server is online or start it, if not
; start one on localhost if no URL was specified
; on the command line
(set 'connection (net-connect host port))
(if (not connection)
	(begin
		(println "Starting server on localhost")
		(if (find ostype '("Win32" "OS/2"))
			(set 'pid (process (string "newlisp -c -d " port)))
			(set 'pid (process (string "./newlisp -c -d " port)))))
	(begin
		(println "Server already running ...")
		(net-close connection)))
	

(println "waiting for server ...")
(sleep 1000)

; test short syntax normal mode
(if (=  (net-eval host port {(+ 3 4)} 1000) 7) 
	(set 'result1 (println "net-eval normal mode ->OK"))
	(println " >>>> net-eval poblem with normal mode ->ERROR"))

; test error reporting
(if (= (net-eval host port "(abc)") "\nERR: invalid function : (abc)\n")
	(set 'result2 (println "net-eval error reporting ->OK"))
	(println " >>>> net-eval problem with error reporting ->ERROR"))

; test secure mode in both syntaxes
(set 'result3 true)

; test saving to URL
(set 'key (uuid))
(set 'verify key)
(if (catch (save targetURL 'key) 'res)
	(set 'result4 (println "save to URL ->OK"))
	(println " >>>> save to URL ->ERROR"))

(if (find ostype '("Win32""Cygwin"))
    (sleep 2000))

; test loading from URL
(if (and
       (println "loading target URL: " targetURL)
       (catch (= (load targetURL) verify) 'result) 
       (= key verify))
       (set 'result5 (println "load from URL ->OK"))
	(begin
    	(println "load from URL ->ERROR")
		(println result))
)

; test writing file to remote

; generate random binary data
(set 'content "")
(dotimes (i 100000)
	(write-buffer content (pack "c" (rand 255))))

; write content to remote URL
(if	(find "transferred" (print (write-file targetURL content)) )
	(set 'result6 (println "write-file to remote URL ->OK"))
	(println "write-file to remote URL ->ERROR"))

(if (= ostype "Win32" ) (sleep 4000)) ; for Win32

; read content from remote URL
(if (catch (= contents (read-file targetURL)) 'result)
    (set 'result7 (println "read-file from remote URL ->OK"))
    (begin
        (println " >>>> read-file from  remote URL ->ERROR")
		(println result))
)

; delete file at remote URL
(if (!= ostype "Win32") ; does not work on Windows when on the same machine
	(if (delete-file targetURL)
		(set 'result8 (println "delete-file from remote URL ->OK"))
		(println " >>>> delete-file from remote URL ->Error"))
	(set 'result8 true)
)

(if pid
	(println "destroy -> " pid " ->" (destroy pid)))

(println "\nduration -> " (- (time-of-day) start) " ms\n")

(if (and result1 result2 result3 result4 result5 result6 result7 result8)
	(println ">>>>> Network eval and network file functions SUCCESSFUL")
	(println ">>>>> PROBLEM in network eval and network file functions")
)
(println)
(exit)
